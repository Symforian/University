
morse.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000f9e  00001032  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080010a  0080010a  0000103c  2**0
                  ALLOC
  3 .stab         000017d0  00000000  00000000  0000103c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f49  00000000  00000000  0000280c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003755  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003768  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000037a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00003d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  0000433e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00004358  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 65 00 	jmp	0xca	; 0xca <__ctors_end>
   4:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   8:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  10:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  14:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  18:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  1c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  20:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  24:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  28:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  2c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  30:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  34:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  38:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  3c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  40:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  44:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  48:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  4c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  50:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  54:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  58:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  5c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  60:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  64:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  68:	17 03       	mulsu	r17, r23
  6a:	f9 02       	muls	r31, r25
  6c:	76 01       	movw	r14, r12
  6e:	62 03       	mulsu	r22, r18
  70:	06 02       	muls	r16, r22
  72:	59 03       	fmul	r21, r17
  74:	0c 01       	movw	r0, r24
  76:	bd 02       	muls	r27, r29
  78:	4e 02       	muls	r20, r30
  7a:	3b 03       	fmul	r19, r19
  7c:	75 01       	movw	r14, r10
  7e:	75 01       	movw	r14, r10
  80:	75 01       	movw	r14, r10
  82:	75 01       	movw	r14, r10
  84:	75 01       	movw	r14, r10
  86:	75 01       	movw	r14, r10
  88:	75 01       	movw	r14, r10
  8a:	45 02       	muls	r20, r21
  8c:	d2 02       	muls	r29, r18
  8e:	d3 01       	movw	r26, r6
  90:	78 02       	muls	r23, r24
  92:	60 01       	movw	r12, r0
  94:	29 03       	fmul	r18, r17
  96:	96 02       	muls	r25, r22
  98:	21 01       	movw	r4, r2
  9a:	4b 01       	movw	r8, r22
  9c:	8b 01       	movw	r16, r22
  9e:	f0 02       	muls	r31, r16
  a0:	20 03       	mulsu	r18, r16
  a2:	b5 01       	movw	r22, r10
  a4:	fd 01       	movw	r30, r26
  a6:	a0 01       	movw	r20, r0
  a8:	81 02       	muls	r24, r17
  aa:	db 02       	muls	r29, r27
  ac:	e8 01       	movw	r28, r16
  ae:	36 01       	movw	r6, r12
  b0:	ca 01       	movw	r24, r20
  b2:	30 02       	muls	r19, r16
  b4:	1b 02       	muls	r17, r27
  b6:	b4 02       	muls	r27, r20
  b8:	32 03       	mulsu	r19, r18
  ba:	9f 02       	muls	r25, r31
  bc:	63 02       	muls	r22, r19

000000be <__trampolines_end>:
  be:	63 64       	ori	r22, 0x43	; 67
  c0:	69 6e       	ori	r22, 0xE9	; 233
  c2:	6f 70       	andi	r22, 0x0F	; 15
  c4:	73 75       	andi	r23, 0x53	; 83
  c6:	78 58       	subi	r23, 0x88	; 136
  c8:	5b 00       	.word	0x005b	; ????

000000ca <__ctors_end>:
  ca:	11 24       	eor	r1, r1
  cc:	1f be       	out	0x3f, r1	; 63
  ce:	cf ef       	ldi	r28, 0xFF	; 255
  d0:	d8 e0       	ldi	r29, 0x08	; 8
  d2:	de bf       	out	0x3e, r29	; 62
  d4:	cd bf       	out	0x3d, r28	; 61

000000d6 <__do_copy_data>:
  d6:	11 e0       	ldi	r17, 0x01	; 1
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	ee e9       	ldi	r30, 0x9E	; 158
  de:	ff e0       	ldi	r31, 0x0F	; 15
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <__do_copy_data+0x10>
  e2:	05 90       	lpm	r0, Z+
  e4:	0d 92       	st	X+, r0
  e6:	aa 30       	cpi	r26, 0x0A	; 10
  e8:	b1 07       	cpc	r27, r17
  ea:	d9 f7       	brne	.-10     	; 0xe2 <__do_copy_data+0xc>

000000ec <__do_clear_bss>:
  ec:	21 e0       	ldi	r18, 0x01	; 1
  ee:	aa e0       	ldi	r26, 0x0A	; 10
  f0:	b1 e0       	ldi	r27, 0x01	; 1
  f2:	01 c0       	rjmp	.+2      	; 0xf6 <.do_clear_bss_start>

000000f4 <.do_clear_bss_loop>:
  f4:	1d 92       	st	X+, r1

000000f6 <.do_clear_bss_start>:
  f6:	ae 31       	cpi	r26, 0x1E	; 30
  f8:	b2 07       	cpc	r27, r18
  fa:	e1 f7       	brne	.-8      	; 0xf4 <.do_clear_bss_loop>
  fc:	0e 94 80 03 	call	0x700	; 0x700 <main>
 100:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <_exit>

00000104 <__bad_interrupt>:
 104:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000108 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
 108:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 10c:	95 ff       	sbrs	r25, 5
 10e:	fc cf       	rjmp	.-8      	; 0x108 <uart_transmit>
  UDR0 = data;
 110:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  return 0;
}
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	08 95       	ret

0000011a <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
 11a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 11e:	87 ff       	sbrs	r24, 7
 120:	fc cf       	rjmp	.-8      	; 0x11a <uart_receive>
  return UDR0;
 122:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	08 95       	ret

0000012a <uart_init>:
#define LINE 3000
// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
 12a:	87 e6       	ldi	r24, 0x67	; 103
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 132:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
 136:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 13a:	88 e1       	ldi	r24, 0x18	; 24
 13c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 140:	86 e0       	ldi	r24, 0x06	; 6
 142:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 146:	08 95       	ret

00000148 <sigSpace>:
}

FILE uart_file;
void sigSpace()
{
    LED_PORT &= ~_BV(LED);
 148:	2d 98       	cbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 14a:	2a ea       	ldi	r18, 0xAA	; 170
 14c:	34 ed       	ldi	r19, 0xD4	; 212
 14e:	8c e1       	ldi	r24, 0x1C	; 28
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	21 50       	subi	r18, 0x01	; 1
 154:	30 40       	sbci	r19, 0x00	; 0
 156:	80 40       	sbci	r24, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	d9 f7       	brne	.-10     	; 0x152 <sigSpace+0xa>
 15c:	00 00       	nop
    _delay_ms(DOT*7);
        printf(" ");
 15e:	80 e2       	ldi	r24, 0x20	; 32
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0c 94 22 04 	jmp	0x844	; 0x844 <putchar>

00000166 <sigSeparationLetters>:
}
void sigSeparationLetters()
{
    LED_PORT &= ~_BV(LED);
 166:	2d 98       	cbi	0x05, 5	; 5
 168:	2f ef       	ldi	r18, 0xFF	; 255
 16a:	8b e7       	ldi	r24, 0x7B	; 123
 16c:	92 e9       	ldi	r25, 0x92	; 146
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <sigSeparationLetters+0x8>
 176:	00 c0       	rjmp	.+0      	; 0x178 <sigSeparationLetters+0x12>
 178:	00 00       	nop
    _delay_ms(LINE);
        printf(" ");
 17a:	80 e2       	ldi	r24, 0x20	; 32
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0c 94 22 04 	jmp	0x844	; 0x844 <putchar>

00000182 <sigSeparationSignals>:
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 182:	2d 98       	cbi	0x05, 5	; 5
 184:	2f ef       	ldi	r18, 0xFF	; 255
 186:	83 ed       	ldi	r24, 0xD3	; 211
 188:	90 e3       	ldi	r25, 0x30	; 48
 18a:	21 50       	subi	r18, 0x01	; 1
 18c:	80 40       	sbci	r24, 0x00	; 0
 18e:	90 40       	sbci	r25, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <sigSeparationSignals+0x8>
 192:	00 c0       	rjmp	.+0      	; 0x194 <sigSeparationSignals+0x12>
 194:	00 00       	nop
 196:	08 95       	ret

00000198 <sigLn>:
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 198:	2d 9a       	sbi	0x05, 5	; 5
 19a:	2f ef       	ldi	r18, 0xFF	; 255
 19c:	8b e7       	ldi	r24, 0x7B	; 123
 19e:	92 e9       	ldi	r25, 0x92	; 146
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <sigLn+0x8>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <sigLn+0x12>
 1aa:	00 00       	nop
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 1ac:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 1ae:	2d 98       	cbi	0x05, 5	; 5
 1b0:	2f ef       	ldi	r18, 0xFF	; 255
 1b2:	83 ed       	ldi	r24, 0xD3	; 211
 1b4:	90 e3       	ldi	r25, 0x30	; 48
 1b6:	21 50       	subi	r18, 0x01	; 1
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	90 40       	sbci	r25, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <sigLn+0x1e>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <sigLn+0x28>
 1c0:	00 00       	nop
 1c2:	08 95       	ret

000001c4 <sigDot>:
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 1c4:	2d 9a       	sbi	0x05, 5	; 5
 1c6:	2f ef       	ldi	r18, 0xFF	; 255
 1c8:	83 ed       	ldi	r24, 0xD3	; 211
 1ca:	90 e3       	ldi	r25, 0x30	; 48
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <sigDot+0x8>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <sigDot+0x12>
 1d6:	00 00       	nop
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 1d8:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 1da:	2d 98       	cbi	0x05, 5	; 5
 1dc:	2f ef       	ldi	r18, 0xFF	; 255
 1de:	83 ed       	ldi	r24, 0xD3	; 211
 1e0:	90 e3       	ldi	r25, 0x30	; 48
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	90 40       	sbci	r25, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <sigDot+0x1e>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <sigDot+0x28>
 1ec:	00 00       	nop
 1ee:	08 95       	ret

000001f0 <led_signal>:
        }
  }
}

void led_signal(char c){
    c = toupper(c);
 1f0:	08 2e       	mov	r0, r24
 1f2:	00 0c       	add	r0, r0
 1f4:	99 0b       	sbc	r25, r25
 1f6:	0e 94 1a 04 	call	0x834	; 0x834 <toupper>
    switch(c){
 1fa:	08 2e       	mov	r0, r24
 1fc:	00 0c       	add	r0, r0
 1fe:	99 0b       	sbc	r25, r25
 200:	aa 0b       	sbc	r26, r26
 202:	bb 0b       	sbc	r27, r27
 204:	fc 01       	movw	r30, r24
 206:	f0 97       	sbiw	r30, 0x30	; 48
 208:	eb 32       	cpi	r30, 0x2B	; 43
 20a:	f1 05       	cpc	r31, r1
 20c:	08 f0       	brcs	.+2      	; 0x210 <led_signal+0x20>
 20e:	6d c0       	rjmp	.+218    	; 0x2ea <led_signal+0xfa>
 210:	ec 5c       	subi	r30, 0xCC	; 204
 212:	ff 4f       	sbci	r31, 0xFF	; 255
 214:	0c 94 14 04 	jmp	0x828	; 0x828 <__tablejump2__>
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 218:	2d 9a       	sbi	0x05, 5	; 5
 21a:	2f ef       	ldi	r18, 0xFF	; 255
 21c:	8b e7       	ldi	r24, 0x7B	; 123
 21e:	92 e9       	ldi	r25, 0x92	; 146
 220:	21 50       	subi	r18, 0x01	; 1
 222:	80 40       	sbci	r24, 0x00	; 0
 224:	90 40       	sbci	r25, 0x00	; 0
 226:	e1 f7       	brne	.-8      	; 0x220 <led_signal+0x30>
 228:	00 c0       	rjmp	.+0      	; 0x22a <led_signal+0x3a>
 22a:	00 00       	nop
void sigDot()
{
    LED_PORT |= _BV(LED);
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 22c:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 22e:	2d 98       	cbi	0x05, 5	; 5
 230:	2f ef       	ldi	r18, 0xFF	; 255
 232:	83 ed       	ldi	r24, 0xD3	; 211
 234:	90 e3       	ldi	r25, 0x30	; 48
 236:	21 50       	subi	r18, 0x01	; 1
 238:	80 40       	sbci	r24, 0x00	; 0
 23a:	90 40       	sbci	r25, 0x00	; 0
 23c:	e1 f7       	brne	.-8      	; 0x236 <led_signal+0x46>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <led_signal+0x50>
 240:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 242:	2d 9a       	sbi	0x05, 5	; 5
 244:	2f ef       	ldi	r18, 0xFF	; 255
 246:	83 ed       	ldi	r24, 0xD3	; 211
 248:	90 e3       	ldi	r25, 0x30	; 48
 24a:	21 50       	subi	r18, 0x01	; 1
 24c:	80 40       	sbci	r24, 0x00	; 0
 24e:	90 40       	sbci	r25, 0x00	; 0
 250:	e1 f7       	brne	.-8      	; 0x24a <led_signal+0x5a>
 252:	00 c0       	rjmp	.+0      	; 0x254 <led_signal+0x64>
 254:	00 00       	nop
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 256:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 258:	2d 98       	cbi	0x05, 5	; 5
 25a:	2f ef       	ldi	r18, 0xFF	; 255
 25c:	83 ed       	ldi	r24, 0xD3	; 211
 25e:	90 e3       	ldi	r25, 0x30	; 48
 260:	21 50       	subi	r18, 0x01	; 1
 262:	80 40       	sbci	r24, 0x00	; 0
 264:	90 40       	sbci	r25, 0x00	; 0
 266:	e1 f7       	brne	.-8      	; 0x260 <led_signal+0x70>
 268:	00 c0       	rjmp	.+0      	; 0x26a <led_signal+0x7a>
 26a:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 26c:	2d 9a       	sbi	0x05, 5	; 5
 26e:	2f ef       	ldi	r18, 0xFF	; 255
 270:	83 ed       	ldi	r24, 0xD3	; 211
 272:	90 e3       	ldi	r25, 0x30	; 48
 274:	21 50       	subi	r18, 0x01	; 1
 276:	80 40       	sbci	r24, 0x00	; 0
 278:	90 40       	sbci	r25, 0x00	; 0
 27a:	e1 f7       	brne	.-8      	; 0x274 <led_signal+0x84>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <led_signal+0x8e>
 27e:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 280:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 282:	2d 98       	cbi	0x05, 5	; 5
 284:	2f ef       	ldi	r18, 0xFF	; 255
 286:	83 ed       	ldi	r24, 0xD3	; 211
 288:	90 e3       	ldi	r25, 0x30	; 48
 28a:	21 50       	subi	r18, 0x01	; 1
 28c:	80 40       	sbci	r24, 0x00	; 0
 28e:	90 40       	sbci	r25, 0x00	; 0
 290:	e1 f7       	brne	.-8      	; 0x28a <led_signal+0x9a>
 292:	00 c0       	rjmp	.+0      	; 0x294 <led_signal+0xa4>
 294:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 296:	2d 9a       	sbi	0x05, 5	; 5
 298:	2f ef       	ldi	r18, 0xFF	; 255
 29a:	83 ed       	ldi	r24, 0xD3	; 211
 29c:	90 e3       	ldi	r25, 0x30	; 48
 29e:	21 50       	subi	r18, 0x01	; 1
 2a0:	80 40       	sbci	r24, 0x00	; 0
 2a2:	90 40       	sbci	r25, 0x00	; 0
 2a4:	e1 f7       	brne	.-8      	; 0x29e <led_signal+0xae>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <led_signal+0xb8>
 2a8:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 2aa:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 2ac:	2d 98       	cbi	0x05, 5	; 5
 2ae:	2f ef       	ldi	r18, 0xFF	; 255
 2b0:	83 ed       	ldi	r24, 0xD3	; 211
 2b2:	90 e3       	ldi	r25, 0x30	; 48
 2b4:	21 50       	subi	r18, 0x01	; 1
 2b6:	80 40       	sbci	r24, 0x00	; 0
 2b8:	90 40       	sbci	r25, 0x00	; 0
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <led_signal+0xc4>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <led_signal+0xce>
 2be:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 2c0:	2d 9a       	sbi	0x05, 5	; 5
 2c2:	2f ef       	ldi	r18, 0xFF	; 255
 2c4:	83 ed       	ldi	r24, 0xD3	; 211
 2c6:	90 e3       	ldi	r25, 0x30	; 48
 2c8:	21 50       	subi	r18, 0x01	; 1
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	90 40       	sbci	r25, 0x00	; 0
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <led_signal+0xd8>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <led_signal+0xe2>
 2d2:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 2d4:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 2d6:	2d 98       	cbi	0x05, 5	; 5
 2d8:	2f ef       	ldi	r18, 0xFF	; 255
 2da:	83 ed       	ldi	r24, 0xD3	; 211
 2dc:	90 e3       	ldi	r25, 0x30	; 48
 2de:	21 50       	subi	r18, 0x01	; 1
 2e0:	80 40       	sbci	r24, 0x00	; 0
 2e2:	90 40       	sbci	r25, 0x00	; 0
 2e4:	e1 f7       	brne	.-8      	; 0x2de <led_signal+0xee>
 2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <led_signal+0xf8>
 2e8:	00 00       	nop
 2ea:	08 95       	ret
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 2ec:	2d 9a       	sbi	0x05, 5	; 5
 2ee:	2f ef       	ldi	r18, 0xFF	; 255
 2f0:	83 ed       	ldi	r24, 0xD3	; 211
 2f2:	90 e3       	ldi	r25, 0x30	; 48
 2f4:	21 50       	subi	r18, 0x01	; 1
 2f6:	80 40       	sbci	r24, 0x00	; 0
 2f8:	90 40       	sbci	r25, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <led_signal+0x104>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <led_signal+0x10e>
 2fe:	00 00       	nop
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 300:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 302:	2d 98       	cbi	0x05, 5	; 5
 304:	2f ef       	ldi	r18, 0xFF	; 255
 306:	83 ed       	ldi	r24, 0xD3	; 211
 308:	90 e3       	ldi	r25, 0x30	; 48
 30a:	21 50       	subi	r18, 0x01	; 1
 30c:	80 40       	sbci	r24, 0x00	; 0
 30e:	90 40       	sbci	r25, 0x00	; 0
 310:	e1 f7       	brne	.-8      	; 0x30a <led_signal+0x11a>
 312:	00 c0       	rjmp	.+0      	; 0x314 <led_signal+0x124>
 314:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 316:	2d 9a       	sbi	0x05, 5	; 5
 318:	2f ef       	ldi	r18, 0xFF	; 255
 31a:	83 ed       	ldi	r24, 0xD3	; 211
 31c:	90 e3       	ldi	r25, 0x30	; 48
 31e:	21 50       	subi	r18, 0x01	; 1
 320:	80 40       	sbci	r24, 0x00	; 0
 322:	90 40       	sbci	r25, 0x00	; 0
 324:	e1 f7       	brne	.-8      	; 0x31e <led_signal+0x12e>
 326:	00 c0       	rjmp	.+0      	; 0x328 <led_signal+0x138>
 328:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 32a:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 32c:	2d 98       	cbi	0x05, 5	; 5
 32e:	2f ef       	ldi	r18, 0xFF	; 255
 330:	83 ed       	ldi	r24, 0xD3	; 211
 332:	90 e3       	ldi	r25, 0x30	; 48
 334:	21 50       	subi	r18, 0x01	; 1
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <led_signal+0x144>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <led_signal+0x14e>
 33e:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 340:	2d 9a       	sbi	0x05, 5	; 5
 342:	2f ef       	ldi	r18, 0xFF	; 255
 344:	8b e7       	ldi	r24, 0x7B	; 123
 346:	92 e9       	ldi	r25, 0x92	; 146
 348:	21 50       	subi	r18, 0x01	; 1
 34a:	80 40       	sbci	r24, 0x00	; 0
 34c:	90 40       	sbci	r25, 0x00	; 0
 34e:	e1 f7       	brne	.-8      	; 0x348 <led_signal+0x158>
 350:	00 c0       	rjmp	.+0      	; 0x352 <led_signal+0x162>
 352:	00 00       	nop
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 354:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 356:	2d 98       	cbi	0x05, 5	; 5
 358:	2f ef       	ldi	r18, 0xFF	; 255
 35a:	83 ed       	ldi	r24, 0xD3	; 211
 35c:	90 e3       	ldi	r25, 0x30	; 48
 35e:	21 50       	subi	r18, 0x01	; 1
 360:	80 40       	sbci	r24, 0x00	; 0
 362:	90 40       	sbci	r25, 0x00	; 0
 364:	e1 f7       	brne	.-8      	; 0x35e <led_signal+0x16e>
 366:	00 c0       	rjmp	.+0      	; 0x368 <led_signal+0x178>
 368:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 36a:	2d 9a       	sbi	0x05, 5	; 5
 36c:	2f ef       	ldi	r18, 0xFF	; 255
 36e:	8b e7       	ldi	r24, 0x7B	; 123
 370:	92 e9       	ldi	r25, 0x92	; 146
 372:	21 50       	subi	r18, 0x01	; 1
 374:	80 40       	sbci	r24, 0x00	; 0
 376:	90 40       	sbci	r25, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <led_signal+0x182>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <led_signal+0x18c>
 37c:	00 00       	nop
void sigDot()
{
    LED_PORT |= _BV(LED);
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 37e:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 380:	2d 98       	cbi	0x05, 5	; 5
 382:	2f ef       	ldi	r18, 0xFF	; 255
 384:	83 ed       	ldi	r24, 0xD3	; 211
 386:	90 e3       	ldi	r25, 0x30	; 48
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	90 40       	sbci	r25, 0x00	; 0
 38e:	e1 f7       	brne	.-8      	; 0x388 <led_signal+0x198>
 390:	00 c0       	rjmp	.+0      	; 0x392 <led_signal+0x1a2>
 392:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 394:	2d 9a       	sbi	0x05, 5	; 5
 396:	2f ef       	ldi	r18, 0xFF	; 255
 398:	8b e7       	ldi	r24, 0x7B	; 123
 39a:	92 e9       	ldi	r25, 0x92	; 146
 39c:	21 50       	subi	r18, 0x01	; 1
 39e:	80 40       	sbci	r24, 0x00	; 0
 3a0:	90 40       	sbci	r25, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <led_signal+0x1ac>
 3a4:	95 cf       	rjmp	.-214    	; 0x2d0 <led_signal+0xe0>
 3a6:	2d 9a       	sbi	0x05, 5	; 5
 3a8:	2f ef       	ldi	r18, 0xFF	; 255
 3aa:	8b e7       	ldi	r24, 0x7B	; 123
 3ac:	92 e9       	ldi	r25, 0x92	; 146
 3ae:	21 50       	subi	r18, 0x01	; 1
 3b0:	80 40       	sbci	r24, 0x00	; 0
 3b2:	90 40       	sbci	r25, 0x00	; 0
 3b4:	e1 f7       	brne	.-8      	; 0x3ae <led_signal+0x1be>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <led_signal+0x1c8>
 3b8:	00 00       	nop
void sigDot()
{
    LED_PORT |= _BV(LED);
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 3ba:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 3bc:	2d 98       	cbi	0x05, 5	; 5
 3be:	2f ef       	ldi	r18, 0xFF	; 255
 3c0:	83 ed       	ldi	r24, 0xD3	; 211
 3c2:	90 e3       	ldi	r25, 0x30	; 48
 3c4:	21 50       	subi	r18, 0x01	; 1
 3c6:	80 40       	sbci	r24, 0x00	; 0
 3c8:	90 40       	sbci	r25, 0x00	; 0
 3ca:	e1 f7       	brne	.-8      	; 0x3c4 <led_signal+0x1d4>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <led_signal+0x1de>
 3ce:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 3d0:	2d 9a       	sbi	0x05, 5	; 5
 3d2:	2f ef       	ldi	r18, 0xFF	; 255
 3d4:	83 ed       	ldi	r24, 0xD3	; 211
 3d6:	90 e3       	ldi	r25, 0x30	; 48
 3d8:	21 50       	subi	r18, 0x01	; 1
 3da:	80 40       	sbci	r24, 0x00	; 0
 3dc:	90 40       	sbci	r25, 0x00	; 0
 3de:	e1 f7       	brne	.-8      	; 0x3d8 <led_signal+0x1e8>
 3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <led_signal+0x1f2>
 3e2:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 3e4:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 3e6:	2d 98       	cbi	0x05, 5	; 5
 3e8:	2f ef       	ldi	r18, 0xFF	; 255
 3ea:	83 ed       	ldi	r24, 0xD3	; 211
 3ec:	90 e3       	ldi	r25, 0x30	; 48
 3ee:	21 50       	subi	r18, 0x01	; 1
 3f0:	80 40       	sbci	r24, 0x00	; 0
 3f2:	90 40       	sbci	r25, 0x00	; 0
 3f4:	e1 f7       	brne	.-8      	; 0x3ee <led_signal+0x1fe>
 3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <led_signal+0x208>
 3f8:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 3fa:	2d 9a       	sbi	0x05, 5	; 5
 3fc:	2f ef       	ldi	r18, 0xFF	; 255
 3fe:	8b e7       	ldi	r24, 0x7B	; 123
 400:	92 e9       	ldi	r25, 0x92	; 146
 402:	21 50       	subi	r18, 0x01	; 1
 404:	80 40       	sbci	r24, 0x00	; 0
 406:	90 40       	sbci	r25, 0x00	; 0
 408:	e1 f7       	brne	.-8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 40a:	4d cf       	rjmp	.-358    	; 0x2a6 <led_signal+0xb6>
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 40c:	2d 9a       	sbi	0x05, 5	; 5
 40e:	2f ef       	ldi	r18, 0xFF	; 255
 410:	83 ed       	ldi	r24, 0xD3	; 211
 412:	90 e3       	ldi	r25, 0x30	; 48
 414:	21 50       	subi	r18, 0x01	; 1
 416:	80 40       	sbci	r24, 0x00	; 0
 418:	90 40       	sbci	r25, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 420:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 422:	2d 98       	cbi	0x05, 5	; 5
 424:	2f ef       	ldi	r18, 0xFF	; 255
 426:	83 ed       	ldi	r24, 0xD3	; 211
 428:	90 e3       	ldi	r25, 0x30	; 48
 42a:	21 50       	subi	r18, 0x01	; 1
 42c:	80 40       	sbci	r24, 0x00	; 0
 42e:	90 40       	sbci	r25, 0x00	; 0
 430:	e1 f7       	brne	.-8      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 434:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 436:	2d 9a       	sbi	0x05, 5	; 5
 438:	2f ef       	ldi	r18, 0xFF	; 255
 43a:	83 ed       	ldi	r24, 0xD3	; 211
 43c:	90 e3       	ldi	r25, 0x30	; 48
 43e:	21 50       	subi	r18, 0x01	; 1
 440:	80 40       	sbci	r24, 0x00	; 0
 442:	90 40       	sbci	r25, 0x00	; 0
 444:	e1 f7       	brne	.-8      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 446:	00 c0       	rjmp	.+0      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 448:	00 00       	nop
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 44a:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 44c:	2d 98       	cbi	0x05, 5	; 5
 44e:	2f ef       	ldi	r18, 0xFF	; 255
 450:	83 ed       	ldi	r24, 0xD3	; 211
 452:	90 e3       	ldi	r25, 0x30	; 48
 454:	21 50       	subi	r18, 0x01	; 1
 456:	80 40       	sbci	r24, 0x00	; 0
 458:	90 40       	sbci	r25, 0x00	; 0
 45a:	e1 f7       	brne	.-8      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45e:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 460:	2d 9a       	sbi	0x05, 5	; 5
 462:	2f ef       	ldi	r18, 0xFF	; 255
 464:	83 ed       	ldi	r24, 0xD3	; 211
 466:	90 e3       	ldi	r25, 0x30	; 48
 468:	21 50       	subi	r18, 0x01	; 1
 46a:	80 40       	sbci	r24, 0x00	; 0
 46c:	90 40       	sbci	r25, 0x00	; 0
 46e:	e1 f7       	brne	.-8      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 472:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 474:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 476:	2d 98       	cbi	0x05, 5	; 5
 478:	2f ef       	ldi	r18, 0xFF	; 255
 47a:	83 ed       	ldi	r24, 0xD3	; 211
 47c:	90 e3       	ldi	r25, 0x30	; 48
 47e:	21 50       	subi	r18, 0x01	; 1
 480:	80 40       	sbci	r24, 0x00	; 0
 482:	90 40       	sbci	r25, 0x00	; 0
 484:	e1 f7       	brne	.-8      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 486:	00 c0       	rjmp	.+0      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 488:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 48a:	2d 9a       	sbi	0x05, 5	; 5
 48c:	2f ef       	ldi	r18, 0xFF	; 255
 48e:	83 ed       	ldi	r24, 0xD3	; 211
 490:	90 e3       	ldi	r25, 0x30	; 48
 492:	21 50       	subi	r18, 0x01	; 1
 494:	80 40       	sbci	r24, 0x00	; 0
 496:	90 40       	sbci	r25, 0x00	; 0
 498:	e1 f7       	brne	.-8      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 49a:	6f cf       	rjmp	.-290    	; 0x37a <led_signal+0x18a>
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 49c:	2d 9a       	sbi	0x05, 5	; 5
 49e:	2f ef       	ldi	r18, 0xFF	; 255
 4a0:	8b e7       	ldi	r24, 0x7B	; 123
 4a2:	92 e9       	ldi	r25, 0x92	; 146
 4a4:	21 50       	subi	r18, 0x01	; 1
 4a6:	80 40       	sbci	r24, 0x00	; 0
 4a8:	90 40       	sbci	r25, 0x00	; 0
 4aa:	e1 f7       	brne	.-8      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4ae:	00 00       	nop
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 4b0:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 4b2:	2d 98       	cbi	0x05, 5	; 5
 4b4:	2f ef       	ldi	r18, 0xFF	; 255
 4b6:	83 ed       	ldi	r24, 0xD3	; 211
 4b8:	90 e3       	ldi	r25, 0x30	; 48
 4ba:	21 50       	subi	r18, 0x01	; 1
 4bc:	80 40       	sbci	r24, 0x00	; 0
 4be:	90 40       	sbci	r25, 0x00	; 0
 4c0:	e1 f7       	brne	.-8      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4c4:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 4c6:	2d 9a       	sbi	0x05, 5	; 5
 4c8:	2f ef       	ldi	r18, 0xFF	; 255
 4ca:	8b e7       	ldi	r24, 0x7B	; 123
 4cc:	92 e9       	ldi	r25, 0x92	; 146
 4ce:	21 50       	subi	r18, 0x01	; 1
 4d0:	80 40       	sbci	r24, 0x00	; 0
 4d2:	90 40       	sbci	r25, 0x00	; 0
 4d4:	e1 f7       	brne	.-8      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d8:	00 00       	nop
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 4da:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 4dc:	2d 98       	cbi	0x05, 5	; 5
 4de:	2f ef       	ldi	r18, 0xFF	; 255
 4e0:	83 ed       	ldi	r24, 0xD3	; 211
 4e2:	90 e3       	ldi	r25, 0x30	; 48
 4e4:	21 50       	subi	r18, 0x01	; 1
 4e6:	80 40       	sbci	r24, 0x00	; 0
 4e8:	90 40       	sbci	r25, 0x00	; 0
 4ea:	e1 f7       	brne	.-8      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ee:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 4f0:	2d 9a       	sbi	0x05, 5	; 5
 4f2:	2f ef       	ldi	r18, 0xFF	; 255
 4f4:	8b e7       	ldi	r24, 0x7B	; 123
 4f6:	92 e9       	ldi	r25, 0x92	; 146
 4f8:	21 50       	subi	r18, 0x01	; 1
 4fa:	80 40       	sbci	r24, 0x00	; 0
 4fc:	90 40       	sbci	r25, 0x00	; 0
 4fe:	e1 f7       	brne	.-8      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 500:	bd ce       	rjmp	.-646    	; 0x27c <led_signal+0x8c>
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 502:	2d 9a       	sbi	0x05, 5	; 5
 504:	2f ef       	ldi	r18, 0xFF	; 255
 506:	83 ed       	ldi	r24, 0xD3	; 211
 508:	90 e3       	ldi	r25, 0x30	; 48
 50a:	21 50       	subi	r18, 0x01	; 1
 50c:	80 40       	sbci	r24, 0x00	; 0
 50e:	90 40       	sbci	r25, 0x00	; 0
 510:	e1 f7       	brne	.-8      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 512:	00 c0       	rjmp	.+0      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 514:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 516:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 518:	2d 98       	cbi	0x05, 5	; 5
 51a:	2f ef       	ldi	r18, 0xFF	; 255
 51c:	83 ed       	ldi	r24, 0xD3	; 211
 51e:	90 e3       	ldi	r25, 0x30	; 48
 520:	21 50       	subi	r18, 0x01	; 1
 522:	80 40       	sbci	r24, 0x00	; 0
 524:	90 40       	sbci	r25, 0x00	; 0
 526:	e1 f7       	brne	.-8      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 528:	00 c0       	rjmp	.+0      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 52a:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 52c:	2d 9a       	sbi	0x05, 5	; 5
 52e:	2f ef       	ldi	r18, 0xFF	; 255
 530:	8b e7       	ldi	r24, 0x7B	; 123
 532:	92 e9       	ldi	r25, 0x92	; 146
 534:	21 50       	subi	r18, 0x01	; 1
 536:	80 40       	sbci	r24, 0x00	; 0
 538:	90 40       	sbci	r25, 0x00	; 0
 53a:	e1 f7       	brne	.-8      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 53c:	51 cf       	rjmp	.-350    	; 0x3e0 <led_signal+0x1f0>
 53e:	2d 9a       	sbi	0x05, 5	; 5
 540:	2f ef       	ldi	r18, 0xFF	; 255
 542:	8b e7       	ldi	r24, 0x7B	; 123
 544:	92 e9       	ldi	r25, 0x92	; 146
 546:	21 50       	subi	r18, 0x01	; 1
 548:	80 40       	sbci	r24, 0x00	; 0
 54a:	90 40       	sbci	r25, 0x00	; 0
 54c:	e1 f7       	brne	.-8      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 54e:	00 c0       	rjmp	.+0      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 550:	00 00       	nop
void sigDot()
{
    LED_PORT |= _BV(LED);
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 552:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 554:	2d 98       	cbi	0x05, 5	; 5
 556:	2f ef       	ldi	r18, 0xFF	; 255
 558:	83 ed       	ldi	r24, 0xD3	; 211
 55a:	90 e3       	ldi	r25, 0x30	; 48
 55c:	21 50       	subi	r18, 0x01	; 1
 55e:	80 40       	sbci	r24, 0x00	; 0
 560:	90 40       	sbci	r25, 0x00	; 0
 562:	e1 f7       	brne	.-8      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 564:	00 c0       	rjmp	.+0      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 566:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 568:	2d 9a       	sbi	0x05, 5	; 5
 56a:	2f ef       	ldi	r18, 0xFF	; 255
 56c:	83 ed       	ldi	r24, 0xD3	; 211
 56e:	90 e3       	ldi	r25, 0x30	; 48
 570:	21 50       	subi	r18, 0x01	; 1
 572:	80 40       	sbci	r24, 0x00	; 0
 574:	90 40       	sbci	r25, 0x00	; 0
 576:	e1 f7       	brne	.-8      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 578:	eb ce       	rjmp	.-554    	; 0x350 <led_signal+0x160>
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 57a:	2d 9a       	sbi	0x05, 5	; 5
 57c:	2f ef       	ldi	r18, 0xFF	; 255
 57e:	8b e7       	ldi	r24, 0x7B	; 123
 580:	92 e9       	ldi	r25, 0x92	; 146
 582:	21 50       	subi	r18, 0x01	; 1
 584:	80 40       	sbci	r24, 0x00	; 0
 586:	90 40       	sbci	r25, 0x00	; 0
 588:	e1 f7       	brne	.-8      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 58a:	00 c0       	rjmp	.+0      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 58c:	00 00       	nop
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 58e:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 590:	2d 98       	cbi	0x05, 5	; 5
 592:	2f ef       	ldi	r18, 0xFF	; 255
 594:	83 ed       	ldi	r24, 0xD3	; 211
 596:	90 e3       	ldi	r25, 0x30	; 48
 598:	21 50       	subi	r18, 0x01	; 1
 59a:	80 40       	sbci	r24, 0x00	; 0
 59c:	90 40       	sbci	r25, 0x00	; 0
 59e:	e1 f7       	brne	.-8      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 5a0:	00 c0       	rjmp	.+0      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 5a2:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 5a4:	2d 9a       	sbi	0x05, 5	; 5
 5a6:	2f ef       	ldi	r18, 0xFF	; 255
 5a8:	8b e7       	ldi	r24, 0x7B	; 123
 5aa:	92 e9       	ldi	r25, 0x92	; 146
 5ac:	21 50       	subi	r18, 0x01	; 1
 5ae:	80 40       	sbci	r24, 0x00	; 0
 5b0:	90 40       	sbci	r25, 0x00	; 0
 5b2:	e1 f7       	brne	.-8      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5b4:	4e ce       	rjmp	.-868    	; 0x252 <led_signal+0x62>
 5b6:	2d 9a       	sbi	0x05, 5	; 5
 5b8:	2f ef       	ldi	r18, 0xFF	; 255
 5ba:	8b e7       	ldi	r24, 0x7B	; 123
 5bc:	92 e9       	ldi	r25, 0x92	; 146
 5be:	21 50       	subi	r18, 0x01	; 1
 5c0:	80 40       	sbci	r24, 0x00	; 0
 5c2:	90 40       	sbci	r25, 0x00	; 0
 5c4:	e1 f7       	brne	.-8      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5c6:	00 c0       	rjmp	.+0      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c8:	00 00       	nop
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 5ca:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 5cc:	2d 98       	cbi	0x05, 5	; 5
 5ce:	2f ef       	ldi	r18, 0xFF	; 255
 5d0:	83 ed       	ldi	r24, 0xD3	; 211
 5d2:	90 e3       	ldi	r25, 0x30	; 48
 5d4:	21 50       	subi	r18, 0x01	; 1
 5d6:	80 40       	sbci	r24, 0x00	; 0
 5d8:	90 40       	sbci	r25, 0x00	; 0
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5de:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 5e0:	2d 9a       	sbi	0x05, 5	; 5
 5e2:	2f ef       	ldi	r18, 0xFF	; 255
 5e4:	8b e7       	ldi	r24, 0x7B	; 123
 5e6:	92 e9       	ldi	r25, 0x92	; 146
 5e8:	21 50       	subi	r18, 0x01	; 1
 5ea:	80 40       	sbci	r24, 0x00	; 0
 5ec:	90 40       	sbci	r25, 0x00	; 0
 5ee:	e1 f7       	brne	.-8      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5f0:	3f cf       	rjmp	.-386    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 5f2:	2d 9a       	sbi	0x05, 5	; 5
 5f4:	2f ef       	ldi	r18, 0xFF	; 255
 5f6:	83 ed       	ldi	r24, 0xD3	; 211
 5f8:	90 e3       	ldi	r25, 0x30	; 48
 5fa:	21 50       	subi	r18, 0x01	; 1
 5fc:	80 40       	sbci	r24, 0x00	; 0
 5fe:	90 40       	sbci	r25, 0x00	; 0
 600:	e1 f7       	brne	.-8      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 602:	00 c0       	rjmp	.+0      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 604:	00 00       	nop
void sigLn()
{
    LED_PORT |= _BV(LED);
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 606:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 608:	2d 98       	cbi	0x05, 5	; 5
 60a:	2f ef       	ldi	r18, 0xFF	; 255
 60c:	83 ed       	ldi	r24, 0xD3	; 211
 60e:	90 e3       	ldi	r25, 0x30	; 48
 610:	21 50       	subi	r18, 0x01	; 1
 612:	80 40       	sbci	r24, 0x00	; 0
 614:	90 40       	sbci	r25, 0x00	; 0
 616:	e1 f7       	brne	.-8      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 618:	00 c0       	rjmp	.+0      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 61a:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 61c:	2d 9a       	sbi	0x05, 5	; 5
 61e:	2f ef       	ldi	r18, 0xFF	; 255
 620:	8b e7       	ldi	r24, 0x7B	; 123
 622:	92 e9       	ldi	r25, 0x92	; 146
 624:	21 50       	subi	r18, 0x01	; 1
 626:	80 40       	sbci	r24, 0x00	; 0
 628:	90 40       	sbci	r25, 0x00	; 0
 62a:	e1 f7       	brne	.-8      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 62c:	7c ce       	rjmp	.-776    	; 0x326 <led_signal+0x136>
 62e:	2d 9a       	sbi	0x05, 5	; 5
 630:	2f ef       	ldi	r18, 0xFF	; 255
 632:	8b e7       	ldi	r24, 0x7B	; 123
 634:	92 e9       	ldi	r25, 0x92	; 146
 636:	21 50       	subi	r18, 0x01	; 1
 638:	80 40       	sbci	r24, 0x00	; 0
 63a:	90 40       	sbci	r25, 0x00	; 0
 63c:	e1 f7       	brne	.-8      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 63e:	e1 cf       	rjmp	.-62     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 640:	2d 9a       	sbi	0x05, 5	; 5
 642:	2f ef       	ldi	r18, 0xFF	; 255
 644:	83 ed       	ldi	r24, 0xD3	; 211
 646:	90 e3       	ldi	r25, 0x30	; 48
 648:	21 50       	subi	r18, 0x01	; 1
 64a:	80 40       	sbci	r24, 0x00	; 0
 64c:	90 40       	sbci	r25, 0x00	; 0
 64e:	e1 f7       	brne	.-8      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 650:	42 cf       	rjmp	.-380    	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 652:	2d 9a       	sbi	0x05, 5	; 5
 654:	2f ef       	ldi	r18, 0xFF	; 255
 656:	83 ed       	ldi	r24, 0xD3	; 211
 658:	90 e3       	ldi	r25, 0x30	; 48
 65a:	21 50       	subi	r18, 0x01	; 1
 65c:	80 40       	sbci	r24, 0x00	; 0
 65e:	90 40       	sbci	r25, 0x00	; 0
 660:	e1 f7       	brne	.-8      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 662:	a9 ce       	rjmp	.-686    	; 0x3b6 <led_signal+0x1c6>
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 664:	2d 9a       	sbi	0x05, 5	; 5
 666:	2f ef       	ldi	r18, 0xFF	; 255
 668:	8b e7       	ldi	r24, 0x7B	; 123
 66a:	92 e9       	ldi	r25, 0x92	; 146
 66c:	21 50       	subi	r18, 0x01	; 1
 66e:	80 40       	sbci	r24, 0x00	; 0
 670:	90 40       	sbci	r25, 0x00	; 0
 672:	e1 f7       	brne	.-8      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 674:	e8 ce       	rjmp	.-560    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 676:	2d 9a       	sbi	0x05, 5	; 5
 678:	2f ef       	ldi	r18, 0xFF	; 255
 67a:	8b e7       	ldi	r24, 0x7B	; 123
 67c:	92 e9       	ldi	r25, 0x92	; 146
 67e:	21 50       	subi	r18, 0x01	; 1
 680:	80 40       	sbci	r24, 0x00	; 0
 682:	90 40       	sbci	r25, 0x00	; 0
 684:	e1 f7       	brne	.-8      	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 686:	00 c0       	rjmp	.+0      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 688:	00 00       	nop
    _delay_ms(LINE);
//        printf("_");
    LED_PORT &= ~_BV(LED);
 68a:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 68c:	2d 98       	cbi	0x05, 5	; 5
 68e:	2f ef       	ldi	r18, 0xFF	; 255
 690:	83 ed       	ldi	r24, 0xD3	; 211
 692:	90 e3       	ldi	r25, 0x30	; 48
 694:	21 50       	subi	r18, 0x01	; 1
 696:	80 40       	sbci	r24, 0x00	; 0
 698:	90 40       	sbci	r25, 0x00	; 0
 69a:	e1 f7       	brne	.-8      	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 69c:	00 c0       	rjmp	.+0      	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 69e:	00 00       	nop
    _delay_ms(DOT);
  //      printf(" ");
}
void sigLn()
{
    LED_PORT |= _BV(LED);
 6a0:	2d 9a       	sbi	0x05, 5	; 5
 6a2:	2f ef       	ldi	r18, 0xFF	; 255
 6a4:	8b e7       	ldi	r24, 0x7B	; 123
 6a6:	92 e9       	ldi	r25, 0x92	; 146
 6a8:	21 50       	subi	r18, 0x01	; 1
 6aa:	80 40       	sbci	r24, 0x00	; 0
 6ac:	90 40       	sbci	r25, 0x00	; 0
 6ae:	e1 f7       	brne	.-8      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 6b0:	30 cf       	rjmp	.-416    	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 6b2:	2d 9a       	sbi	0x05, 5	; 5
 6b4:	2f ef       	ldi	r18, 0xFF	; 255
 6b6:	83 ed       	ldi	r24, 0xD3	; 211
 6b8:	90 e3       	ldi	r25, 0x30	; 48
 6ba:	21 50       	subi	r18, 0x01	; 1
 6bc:	80 40       	sbci	r24, 0x00	; 0
 6be:	90 40       	sbci	r25, 0x00	; 0
 6c0:	e1 f7       	brne	.-8      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6c2:	b2 cd       	rjmp	.-1180   	; 0x228 <led_signal+0x38>
 6c4:	2d 9a       	sbi	0x05, 5	; 5
 6c6:	2f ef       	ldi	r18, 0xFF	; 255
 6c8:	83 ed       	ldi	r24, 0xD3	; 211
 6ca:	90 e3       	ldi	r25, 0x30	; 48
 6cc:	21 50       	subi	r18, 0x01	; 1
 6ce:	80 40       	sbci	r24, 0x00	; 0
 6d0:	90 40       	sbci	r25, 0x00	; 0
 6d2:	e1 f7       	brne	.-8      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6d6:	00 00       	nop
    _delay_ms(DOT);
//        printf(".");
    LED_PORT &= ~_BV(LED);
 6d8:	2d 98       	cbi	0x05, 5	; 5
    _delay_ms(LINE);
        printf(" ");
}
void sigSeparationSignals()
{
    LED_PORT &= ~_BV(LED);
 6da:	2d 98       	cbi	0x05, 5	; 5
 6dc:	2f ef       	ldi	r18, 0xFF	; 255
 6de:	83 ed       	ldi	r24, 0xD3	; 211
 6e0:	90 e3       	ldi	r25, 0x30	; 48
 6e2:	21 50       	subi	r18, 0x01	; 1
 6e4:	80 40       	sbci	r24, 0x00	; 0
 6e6:	90 40       	sbci	r25, 0x00	; 0
 6e8:	e1 f7       	brne	.-8      	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6ea:	00 c0       	rjmp	.+0      	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
 6ec:	00 00       	nop
    LED_PORT &= ~_BV(LED);
    sigSeparationSignals();
}
void sigDot()
{
    LED_PORT |= _BV(LED);
 6ee:	2d 9a       	sbi	0x05, 5	; 5
 6f0:	2f ef       	ldi	r18, 0xFF	; 255
 6f2:	83 ed       	ldi	r24, 0xD3	; 211
 6f4:	90 e3       	ldi	r25, 0x30	; 48
 6f6:	21 50       	subi	r18, 0x01	; 1
 6f8:	80 40       	sbci	r24, 0x00	; 0
 6fa:	90 40       	sbci	r25, 0x00	; 0
 6fc:	e1 f7       	brne	.-8      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6fe:	27 cf       	rjmp	.-434    	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>

00000700 <main>:

}

void led_signal(char c);
int main()
{
 700:	cf 93       	push	r28
 702:	df 93       	push	r29
 704:	cd b7       	in	r28, 0x3d	; 61
 706:	de b7       	in	r29, 0x3e	; 62
 708:	e2 97       	sbiw	r28, 0x32	; 50
 70a:	0f b6       	in	r0, 0x3f	; 63
 70c:	f8 94       	cli
 70e:	de bf       	out	0x3e, r29	; 62
 710:	0f be       	out	0x3f, r0	; 63
 712:	cd bf       	out	0x3d, r28	; 61
#define LINE 3000
// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
 714:	87 e6       	ldi	r24, 0x67	; 103
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 71c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
 720:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 724:	88 e1       	ldi	r24, 0x18	; 24
 726:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 72a:	86 e0       	ldi	r24, 0x06	; 6
 72c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
int main()
{
  // zainicjalizuj UART
  uart_init();
  // skonfiguruj strumienie wejścia/wyjścia
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
 730:	8a e0       	ldi	r24, 0x0A	; 10
 732:	91 e0       	ldi	r25, 0x01	; 1
 734:	24 e8       	ldi	r18, 0x84	; 132
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <__data_end+0x9>
 73c:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <__data_end+0x8>
 740:	2d e8       	ldi	r18, 0x8D	; 141
 742:	30 e0       	ldi	r19, 0x00	; 0
 744:	30 93 15 01 	sts	0x0115, r19	; 0x800115 <__data_end+0xb>
 748:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <__data_end+0xa>
 74c:	23 e0       	ldi	r18, 0x03	; 3
 74e:	20 93 0d 01 	sts	0x010D, r18	; 0x80010d <__data_end+0x3>
 752:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <__data_end+0xd>
 756:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__data_end+0xc>
  stdin = stdout = stderr = &uart_file;
 75a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__iob+0x5>
 75e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__iob+0x4>
 762:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__iob+0x3>
 766:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__iob+0x2>
 76a:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__iob+0x1>
 76e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__iob>
  LED_DDR |= _BV(LED);
 772:	25 9a       	sbi	0x04, 5	; 4
  while(1) {
    char args[50];
    scanf("%[^\r\n]%c", &args);
 774:	80 e0       	ldi	r24, 0x00	; 0
 776:	a8 2e       	mov	r10, r24
 778:	81 e0       	ldi	r24, 0x01	; 1
 77a:	b8 2e       	mov	r11, r24
 77c:	06 c0       	rjmp	.+12     	; 0x78a <main+0x8a>
    for(int i = 0; args[i]!='\0';i++){
    //printf("Odczytano: '%c' \r\n", toupper(args[i]));
        if(args[i] == ' ')
            sigSpace();
        led_signal(args[i]);
        if(i<49 && args[i+1] != ' ' && args[i+1] != '\0')
 77e:	f7 01       	movw	r30, r14
 780:	80 81       	ld	r24, Z
 782:	80 32       	cpi	r24, 0x20	; 32
 784:	79 f1       	breq	.+94     	; 0x7e4 <main+0xe4>
 786:	81 11       	cpse	r24, r1
 788:	40 c0       	rjmp	.+128    	; 0x80a <main+0x10a>
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
  stdin = stdout = stderr = &uart_file;
  LED_DDR |= _BV(LED);
  while(1) {
    char args[50];
    scanf("%[^\r\n]%c", &args);
 78a:	21 e0       	ldi	r18, 0x01	; 1
 78c:	30 e0       	ldi	r19, 0x00	; 0
 78e:	2c 0f       	add	r18, r28
 790:	3d 1f       	adc	r19, r29
 792:	3f 93       	push	r19
 794:	2f 93       	push	r18
 796:	bf 92       	push	r11
 798:	af 92       	push	r10
 79a:	0e 94 29 04 	call	0x852	; 0x852 <scanf>
    for(int i = 0; args[i]!='\0';i++){
 79e:	89 81       	ldd	r24, Y+1	; 0x01
 7a0:	0f 90       	pop	r0
 7a2:	0f 90       	pop	r0
 7a4:	0f 90       	pop	r0
 7a6:	0f 90       	pop	r0
 7a8:	88 23       	and	r24, r24
 7aa:	79 f3       	breq	.-34     	; 0x78a <main+0x8a>
 7ac:	fe 01       	movw	r30, r28
 7ae:	31 96       	adiw	r30, 0x01	; 1
 7b0:	7f 01       	movw	r14, r30
 7b2:	00 e0       	ldi	r16, 0x00	; 0
 7b4:	10 e0       	ldi	r17, 0x00	; 0
    //printf("Odczytano: '%c' \r\n", toupper(args[i]));
        if(args[i] == ' ')
 7b6:	80 32       	cpi	r24, 0x20	; 32
 7b8:	c1 f0       	breq	.+48     	; 0x7ea <main+0xea>
 7ba:	68 01       	movw	r12, r16
 7bc:	9f ef       	ldi	r25, 0xFF	; 255
 7be:	c9 1a       	sub	r12, r25
 7c0:	d9 0a       	sbc	r13, r25
            sigSpace();
        led_signal(args[i]);
 7c2:	f7 01       	movw	r30, r14
 7c4:	81 91       	ld	r24, Z+
 7c6:	7f 01       	movw	r14, r30
 7c8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <led_signal>
        if(i<49 && args[i+1] != ' ' && args[i+1] != '\0')
 7cc:	01 33       	cpi	r16, 0x31	; 49
 7ce:	11 05       	cpc	r17, r1
 7d0:	b1 f6       	brne	.-84     	; 0x77e <main+0x7e>
  stdin = stdout = stderr = &uart_file;
  LED_DDR |= _BV(LED);
  while(1) {
    char args[50];
    scanf("%[^\r\n]%c", &args);
    for(int i = 0; args[i]!='\0';i++){
 7d2:	e1 e0       	ldi	r30, 0x01	; 1
 7d4:	f0 e0       	ldi	r31, 0x00	; 0
 7d6:	ec 0f       	add	r30, r28
 7d8:	fd 1f       	adc	r31, r29
 7da:	ec 0d       	add	r30, r12
 7dc:	fd 1d       	adc	r31, r13
 7de:	80 81       	ld	r24, Z
 7e0:	88 23       	and	r24, r24
 7e2:	99 f2       	breq	.-90     	; 0x78a <main+0x8a>
 7e4:	86 01       	movw	r16, r12
    //printf("Odczytano: '%c' \r\n", toupper(args[i]));
        if(args[i] == ' ')
 7e6:	80 32       	cpi	r24, 0x20	; 32
 7e8:	41 f7       	brne	.-48     	; 0x7ba <main+0xba>
}

FILE uart_file;
void sigSpace()
{
    LED_PORT &= ~_BV(LED);
 7ea:	2d 98       	cbi	0x05, 5	; 5
 7ec:	fa ea       	ldi	r31, 0xAA	; 170
 7ee:	24 ed       	ldi	r18, 0xD4	; 212
 7f0:	3c e1       	ldi	r19, 0x1C	; 28
 7f2:	81 e0       	ldi	r24, 0x01	; 1
 7f4:	f1 50       	subi	r31, 0x01	; 1
 7f6:	20 40       	sbci	r18, 0x00	; 0
 7f8:	30 40       	sbci	r19, 0x00	; 0
 7fa:	80 40       	sbci	r24, 0x00	; 0
 7fc:	d9 f7       	brne	.-10     	; 0x7f4 <main+0xf4>
 7fe:	00 00       	nop
    _delay_ms(DOT*7);
        printf(" ");
 800:	80 e2       	ldi	r24, 0x20	; 32
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	0e 94 22 04 	call	0x844	; 0x844 <putchar>
 808:	d8 cf       	rjmp	.-80     	; 0x7ba <main+0xba>
}
void sigSeparationLetters()
{
    LED_PORT &= ~_BV(LED);
 80a:	2d 98       	cbi	0x05, 5	; 5
 80c:	ff ef       	ldi	r31, 0xFF	; 255
 80e:	2b e7       	ldi	r18, 0x7B	; 123
 810:	32 e9       	ldi	r19, 0x92	; 146
 812:	f1 50       	subi	r31, 0x01	; 1
 814:	20 40       	sbci	r18, 0x00	; 0
 816:	30 40       	sbci	r19, 0x00	; 0
 818:	e1 f7       	brne	.-8      	; 0x812 <main+0x112>
 81a:	00 c0       	rjmp	.+0      	; 0x81c <main+0x11c>
 81c:	00 00       	nop
    _delay_ms(LINE);
        printf(" ");
 81e:	80 e2       	ldi	r24, 0x20	; 32
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	0e 94 22 04 	call	0x844	; 0x844 <putchar>
 826:	d5 cf       	rjmp	.-86     	; 0x7d2 <main+0xd2>

00000828 <__tablejump2__>:
 828:	ee 0f       	add	r30, r30
 82a:	ff 1f       	adc	r31, r31
 82c:	05 90       	lpm	r0, Z+
 82e:	f4 91       	lpm	r31, Z
 830:	e0 2d       	mov	r30, r0
 832:	09 94       	ijmp

00000834 <toupper>:
 834:	91 11       	cpse	r25, r1
 836:	08 95       	ret
 838:	81 56       	subi	r24, 0x61	; 97
 83a:	8a 51       	subi	r24, 0x1A	; 26
 83c:	08 f4       	brcc	.+2      	; 0x840 <toupper+0xc>
 83e:	80 52       	subi	r24, 0x20	; 32
 840:	85 58       	subi	r24, 0x85	; 133
 842:	08 95       	ret

00000844 <putchar>:
 844:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <__iob+0x2>
 848:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <__iob+0x3>
 84c:	0e 94 3e 07 	call	0xe7c	; 0xe7c <fputc>
 850:	08 95       	ret

00000852 <scanf>:
 852:	a0 e0       	ldi	r26, 0x00	; 0
 854:	b0 e0       	ldi	r27, 0x00	; 0
 856:	ef e2       	ldi	r30, 0x2F	; 47
 858:	f4 e0       	ldi	r31, 0x04	; 4
 85a:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__prologue_saves__+0x20>
 85e:	ae 01       	movw	r20, r28
 860:	4b 5f       	subi	r20, 0xFB	; 251
 862:	5f 4f       	sbci	r21, 0xFF	; 255
 864:	fa 01       	movw	r30, r20
 866:	61 91       	ld	r22, Z+
 868:	71 91       	ld	r23, Z+
 86a:	af 01       	movw	r20, r30
 86c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__iob>
 870:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__iob+0x1>
 874:	0e 94 db 05 	call	0xbb6	; 0xbb6 <vfscanf>
 878:	e2 e0       	ldi	r30, 0x02	; 2
 87a:	0c 94 c2 07 	jmp	0xf84	; 0xf84 <__epilogue_restores__+0x20>

0000087e <putval>:
 87e:	20 fd       	sbrc	r18, 0
 880:	09 c0       	rjmp	.+18     	; 0x894 <putval+0x16>
 882:	fc 01       	movw	r30, r24
 884:	23 fd       	sbrc	r18, 3
 886:	05 c0       	rjmp	.+10     	; 0x892 <putval+0x14>
 888:	22 ff       	sbrs	r18, 2
 88a:	02 c0       	rjmp	.+4      	; 0x890 <putval+0x12>
 88c:	73 83       	std	Z+3, r23	; 0x03
 88e:	62 83       	std	Z+2, r22	; 0x02
 890:	51 83       	std	Z+1, r21	; 0x01
 892:	40 83       	st	Z, r20
 894:	08 95       	ret

00000896 <mulacc>:
 896:	44 fd       	sbrc	r20, 4
 898:	17 c0       	rjmp	.+46     	; 0x8c8 <mulacc+0x32>
 89a:	46 fd       	sbrc	r20, 6
 89c:	17 c0       	rjmp	.+46     	; 0x8cc <mulacc+0x36>
 89e:	ab 01       	movw	r20, r22
 8a0:	bc 01       	movw	r22, r24
 8a2:	da 01       	movw	r26, r20
 8a4:	fb 01       	movw	r30, r22
 8a6:	aa 0f       	add	r26, r26
 8a8:	bb 1f       	adc	r27, r27
 8aa:	ee 1f       	adc	r30, r30
 8ac:	ff 1f       	adc	r31, r31
 8ae:	10 94       	com	r1
 8b0:	d1 f7       	brne	.-12     	; 0x8a6 <mulacc+0x10>
 8b2:	4a 0f       	add	r20, r26
 8b4:	5b 1f       	adc	r21, r27
 8b6:	6e 1f       	adc	r22, r30
 8b8:	7f 1f       	adc	r23, r31
 8ba:	cb 01       	movw	r24, r22
 8bc:	ba 01       	movw	r22, r20
 8be:	66 0f       	add	r22, r22
 8c0:	77 1f       	adc	r23, r23
 8c2:	88 1f       	adc	r24, r24
 8c4:	99 1f       	adc	r25, r25
 8c6:	09 c0       	rjmp	.+18     	; 0x8da <mulacc+0x44>
 8c8:	33 e0       	ldi	r19, 0x03	; 3
 8ca:	01 c0       	rjmp	.+2      	; 0x8ce <mulacc+0x38>
 8cc:	34 e0       	ldi	r19, 0x04	; 4
 8ce:	66 0f       	add	r22, r22
 8d0:	77 1f       	adc	r23, r23
 8d2:	88 1f       	adc	r24, r24
 8d4:	99 1f       	adc	r25, r25
 8d6:	31 50       	subi	r19, 0x01	; 1
 8d8:	d1 f7       	brne	.-12     	; 0x8ce <mulacc+0x38>
 8da:	62 0f       	add	r22, r18
 8dc:	71 1d       	adc	r23, r1
 8de:	81 1d       	adc	r24, r1
 8e0:	91 1d       	adc	r25, r1
 8e2:	08 95       	ret

000008e4 <skip_spaces>:
 8e4:	0f 93       	push	r16
 8e6:	1f 93       	push	r17
 8e8:	cf 93       	push	r28
 8ea:	df 93       	push	r29
 8ec:	8c 01       	movw	r16, r24
 8ee:	c8 01       	movw	r24, r16
 8f0:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 8f4:	ec 01       	movw	r28, r24
 8f6:	97 fd       	sbrc	r25, 7
 8f8:	08 c0       	rjmp	.+16     	; 0x90a <__stack+0xb>
 8fa:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <isspace>
 8fe:	89 2b       	or	r24, r25
 900:	b1 f7       	brne	.-20     	; 0x8ee <skip_spaces+0xa>
 902:	b8 01       	movw	r22, r16
 904:	ce 01       	movw	r24, r28
 906:	0e 94 7a 07 	call	0xef4	; 0xef4 <ungetc>
 90a:	ce 01       	movw	r24, r28
 90c:	df 91       	pop	r29
 90e:	cf 91       	pop	r28
 910:	1f 91       	pop	r17
 912:	0f 91       	pop	r16
 914:	08 95       	ret

00000916 <conv_int>:
 916:	8f 92       	push	r8
 918:	9f 92       	push	r9
 91a:	af 92       	push	r10
 91c:	bf 92       	push	r11
 91e:	ef 92       	push	r14
 920:	ff 92       	push	r15
 922:	0f 93       	push	r16
 924:	1f 93       	push	r17
 926:	cf 93       	push	r28
 928:	df 93       	push	r29
 92a:	8c 01       	movw	r16, r24
 92c:	d6 2f       	mov	r29, r22
 92e:	7a 01       	movw	r14, r20
 930:	b2 2e       	mov	r11, r18
 932:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 936:	9c 01       	movw	r18, r24
 938:	33 27       	eor	r19, r19
 93a:	2b 32       	cpi	r18, 0x2B	; 43
 93c:	31 05       	cpc	r19, r1
 93e:	31 f0       	breq	.+12     	; 0x94c <conv_int+0x36>
 940:	2d 32       	cpi	r18, 0x2D	; 45
 942:	31 05       	cpc	r19, r1
 944:	61 f4       	brne	.+24     	; 0x95e <conv_int+0x48>
 946:	8b 2d       	mov	r24, r11
 948:	80 68       	ori	r24, 0x80	; 128
 94a:	b8 2e       	mov	r11, r24
 94c:	d1 50       	subi	r29, 0x01	; 1
 94e:	11 f4       	brne	.+4      	; 0x954 <conv_int+0x3e>
 950:	80 e0       	ldi	r24, 0x00	; 0
 952:	68 c0       	rjmp	.+208    	; 0xa24 <conv_int+0x10e>
 954:	c8 01       	movw	r24, r16
 956:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 95a:	97 fd       	sbrc	r25, 7
 95c:	f9 cf       	rjmp	.-14     	; 0x950 <conv_int+0x3a>
 95e:	cb 2d       	mov	r28, r11
 960:	cd 7f       	andi	r28, 0xFD	; 253
 962:	2b 2d       	mov	r18, r11
 964:	20 73       	andi	r18, 0x30	; 48
 966:	09 f5       	brne	.+66     	; 0x9aa <conv_int+0x94>
 968:	80 33       	cpi	r24, 0x30	; 48
 96a:	f9 f4       	brne	.+62     	; 0x9aa <conv_int+0x94>
 96c:	aa 24       	eor	r10, r10
 96e:	aa 94       	dec	r10
 970:	ad 0e       	add	r10, r29
 972:	09 f4       	brne	.+2      	; 0x976 <conv_int+0x60>
 974:	43 c0       	rjmp	.+134    	; 0x9fc <conv_int+0xe6>
 976:	c8 01       	movw	r24, r16
 978:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 97c:	97 fd       	sbrc	r25, 7
 97e:	3e c0       	rjmp	.+124    	; 0x9fc <conv_int+0xe6>
 980:	9c 01       	movw	r18, r24
 982:	2f 7d       	andi	r18, 0xDF	; 223
 984:	33 27       	eor	r19, r19
 986:	28 35       	cpi	r18, 0x58	; 88
 988:	31 05       	cpc	r19, r1
 98a:	49 f4       	brne	.+18     	; 0x99e <conv_int+0x88>
 98c:	c2 64       	ori	r28, 0x42	; 66
 98e:	d2 50       	subi	r29, 0x02	; 2
 990:	a9 f1       	breq	.+106    	; 0x9fc <conv_int+0xe6>
 992:	c8 01       	movw	r24, r16
 994:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 998:	97 ff       	sbrs	r25, 7
 99a:	07 c0       	rjmp	.+14     	; 0x9aa <conv_int+0x94>
 99c:	2f c0       	rjmp	.+94     	; 0x9fc <conv_int+0xe6>
 99e:	b6 fe       	sbrs	r11, 6
 9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <conv_int+0x90>
 9a2:	c2 60       	ori	r28, 0x02	; 2
 9a4:	01 c0       	rjmp	.+2      	; 0x9a8 <conv_int+0x92>
 9a6:	c2 61       	ori	r28, 0x12	; 18
 9a8:	da 2d       	mov	r29, r10
 9aa:	81 2c       	mov	r8, r1
 9ac:	91 2c       	mov	r9, r1
 9ae:	54 01       	movw	r10, r8
 9b0:	20 ed       	ldi	r18, 0xD0	; 208
 9b2:	28 0f       	add	r18, r24
 9b4:	28 30       	cpi	r18, 0x08	; 8
 9b6:	80 f0       	brcs	.+32     	; 0x9d8 <conv_int+0xc2>
 9b8:	c4 ff       	sbrs	r28, 4
 9ba:	04 c0       	rjmp	.+8      	; 0x9c4 <conv_int+0xae>
 9bc:	b8 01       	movw	r22, r16
 9be:	0e 94 7a 07 	call	0xef4	; 0xef4 <ungetc>
 9c2:	19 c0       	rjmp	.+50     	; 0x9f6 <conv_int+0xe0>
 9c4:	2a 30       	cpi	r18, 0x0A	; 10
 9c6:	40 f0       	brcs	.+16     	; 0x9d8 <conv_int+0xc2>
 9c8:	c6 ff       	sbrs	r28, 6
 9ca:	f8 cf       	rjmp	.-16     	; 0x9bc <conv_int+0xa6>
 9cc:	2f 7d       	andi	r18, 0xDF	; 223
 9ce:	3f ee       	ldi	r19, 0xEF	; 239
 9d0:	32 0f       	add	r19, r18
 9d2:	36 30       	cpi	r19, 0x06	; 6
 9d4:	98 f7       	brcc	.-26     	; 0x9bc <conv_int+0xa6>
 9d6:	27 50       	subi	r18, 0x07	; 7
 9d8:	4c 2f       	mov	r20, r28
 9da:	c5 01       	movw	r24, r10
 9dc:	b4 01       	movw	r22, r8
 9de:	0e 94 4b 04 	call	0x896	; 0x896 <mulacc>
 9e2:	4b 01       	movw	r8, r22
 9e4:	5c 01       	movw	r10, r24
 9e6:	c2 60       	ori	r28, 0x02	; 2
 9e8:	d1 50       	subi	r29, 0x01	; 1
 9ea:	59 f0       	breq	.+22     	; 0xa02 <conv_int+0xec>
 9ec:	c8 01       	movw	r24, r16
 9ee:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 9f2:	97 ff       	sbrs	r25, 7
 9f4:	dd cf       	rjmp	.-70     	; 0x9b0 <conv_int+0x9a>
 9f6:	c1 fd       	sbrc	r28, 1
 9f8:	04 c0       	rjmp	.+8      	; 0xa02 <conv_int+0xec>
 9fa:	aa cf       	rjmp	.-172    	; 0x950 <conv_int+0x3a>
 9fc:	81 2c       	mov	r8, r1
 9fe:	91 2c       	mov	r9, r1
 a00:	54 01       	movw	r10, r8
 a02:	c7 ff       	sbrs	r28, 7
 a04:	08 c0       	rjmp	.+16     	; 0xa16 <conv_int+0x100>
 a06:	b0 94       	com	r11
 a08:	a0 94       	com	r10
 a0a:	90 94       	com	r9
 a0c:	80 94       	com	r8
 a0e:	81 1c       	adc	r8, r1
 a10:	91 1c       	adc	r9, r1
 a12:	a1 1c       	adc	r10, r1
 a14:	b1 1c       	adc	r11, r1
 a16:	2c 2f       	mov	r18, r28
 a18:	b5 01       	movw	r22, r10
 a1a:	a4 01       	movw	r20, r8
 a1c:	c7 01       	movw	r24, r14
 a1e:	0e 94 3f 04 	call	0x87e	; 0x87e <putval>
 a22:	81 e0       	ldi	r24, 0x01	; 1
 a24:	df 91       	pop	r29
 a26:	cf 91       	pop	r28
 a28:	1f 91       	pop	r17
 a2a:	0f 91       	pop	r16
 a2c:	ff 90       	pop	r15
 a2e:	ef 90       	pop	r14
 a30:	bf 90       	pop	r11
 a32:	af 90       	pop	r10
 a34:	9f 90       	pop	r9
 a36:	8f 90       	pop	r8
 a38:	08 95       	ret

00000a3a <conv_brk>:
 a3a:	a0 e2       	ldi	r26, 0x20	; 32
 a3c:	b0 e0       	ldi	r27, 0x00	; 0
 a3e:	e3 e2       	ldi	r30, 0x23	; 35
 a40:	f5 e0       	ldi	r31, 0x05	; 5
 a42:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__prologue_saves__+0x6>
 a46:	5c 01       	movw	r10, r24
 a48:	96 2e       	mov	r9, r22
 a4a:	7a 01       	movw	r14, r20
 a4c:	f9 01       	movw	r30, r18
 a4e:	8e 01       	movw	r16, r28
 a50:	0f 5f       	subi	r16, 0xFF	; 255
 a52:	1f 4f       	sbci	r17, 0xFF	; 255
 a54:	68 01       	movw	r12, r16
 a56:	80 e2       	ldi	r24, 0x20	; 32
 a58:	d8 01       	movw	r26, r16
 a5a:	1d 92       	st	X+, r1
 a5c:	8a 95       	dec	r24
 a5e:	e9 f7       	brne	.-6      	; 0xa5a <conv_brk+0x20>
 a60:	d5 01       	movw	r26, r10
 a62:	13 96       	adiw	r26, 0x03	; 3
 a64:	8c 90       	ld	r8, X
 a66:	80 e0       	ldi	r24, 0x00	; 0
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	61 2c       	mov	r6, r1
 a6c:	71 2c       	mov	r7, r1
 a6e:	30 e0       	ldi	r19, 0x00	; 0
 a70:	61 e0       	ldi	r22, 0x01	; 1
 a72:	70 e0       	ldi	r23, 0x00	; 0
 a74:	83 fc       	sbrc	r8, 3
 a76:	25 91       	lpm	r18, Z+
 a78:	83 fe       	sbrs	r8, 3
 a7a:	21 91       	ld	r18, Z+
 a7c:	8f 01       	movw	r16, r30
 a7e:	52 2e       	mov	r5, r18
 a80:	21 11       	cpse	r18, r1
 a82:	03 c0       	rjmp	.+6      	; 0xa8a <conv_brk+0x50>
 a84:	80 e0       	ldi	r24, 0x00	; 0
 a86:	90 e0       	ldi	r25, 0x00	; 0
 a88:	92 c0       	rjmp	.+292    	; 0xbae <conv_brk+0x174>
 a8a:	2e 35       	cpi	r18, 0x5E	; 94
 a8c:	11 f4       	brne	.+4      	; 0xa92 <conv_brk+0x58>
 a8e:	00 97       	sbiw	r24, 0x00	; 0
 a90:	51 f1       	breq	.+84     	; 0xae6 <conv_brk+0xac>
 a92:	43 2f       	mov	r20, r19
 a94:	50 e0       	ldi	r21, 0x00	; 0
 a96:	48 17       	cp	r20, r24
 a98:	59 07       	cpc	r21, r25
 a9a:	3c f4       	brge	.+14     	; 0xaaa <conv_brk+0x70>
 a9c:	2d 35       	cpi	r18, 0x5D	; 93
 a9e:	59 f1       	breq	.+86     	; 0xaf6 <conv_brk+0xbc>
 aa0:	2d 32       	cpi	r18, 0x2D	; 45
 aa2:	19 f4       	brne	.+6      	; 0xaaa <conv_brk+0x70>
 aa4:	77 20       	and	r7, r7
 aa6:	09 f1       	breq	.+66     	; 0xaea <conv_brk+0xb0>
 aa8:	03 c0       	rjmp	.+6      	; 0xab0 <conv_brk+0x76>
 aaa:	77 20       	and	r7, r7
 aac:	09 f4       	brne	.+2      	; 0xab0 <conv_brk+0x76>
 aae:	6a c0       	rjmp	.+212    	; 0xb84 <conv_brk+0x14a>
 ab0:	45 2d       	mov	r20, r5
 ab2:	46 95       	lsr	r20
 ab4:	46 95       	lsr	r20
 ab6:	46 95       	lsr	r20
 ab8:	d6 01       	movw	r26, r12
 aba:	a4 0f       	add	r26, r20
 abc:	b1 1d       	adc	r27, r1
 abe:	45 2d       	mov	r20, r5
 ac0:	47 70       	andi	r20, 0x07	; 7
 ac2:	8b 01       	movw	r16, r22
 ac4:	02 c0       	rjmp	.+4      	; 0xaca <conv_brk+0x90>
 ac6:	00 0f       	add	r16, r16
 ac8:	11 1f       	adc	r17, r17
 aca:	4a 95       	dec	r20
 acc:	e2 f7       	brpl	.-8      	; 0xac6 <conv_brk+0x8c>
 ace:	a8 01       	movw	r20, r16
 ad0:	5c 91       	ld	r21, X
 ad2:	45 2b       	or	r20, r21
 ad4:	4c 93       	st	X, r20
 ad6:	65 14       	cp	r6, r5
 ad8:	59 f0       	breq	.+22     	; 0xaf0 <conv_brk+0xb6>
 ada:	56 14       	cp	r5, r6
 adc:	10 f4       	brcc	.+4      	; 0xae2 <conv_brk+0xa8>
 ade:	53 94       	inc	r5
 ae0:	e7 cf       	rjmp	.-50     	; 0xab0 <conv_brk+0x76>
 ae2:	5a 94       	dec	r5
 ae4:	e5 cf       	rjmp	.-54     	; 0xab0 <conv_brk+0x76>
 ae6:	31 e0       	ldi	r19, 0x01	; 1
 ae8:	04 c0       	rjmp	.+8      	; 0xaf2 <conv_brk+0xb8>
 aea:	77 24       	eor	r7, r7
 aec:	73 94       	inc	r7
 aee:	01 c0       	rjmp	.+2      	; 0xaf2 <conv_brk+0xb8>
 af0:	71 2c       	mov	r7, r1
 af2:	01 96       	adiw	r24, 0x01	; 1
 af4:	bf cf       	rjmp	.-130    	; 0xa74 <conv_brk+0x3a>
 af6:	77 20       	and	r7, r7
 af8:	19 f0       	breq	.+6      	; 0xb00 <conv_brk+0xc6>
 afa:	8e 81       	ldd	r24, Y+6	; 0x06
 afc:	80 62       	ori	r24, 0x20	; 32
 afe:	8e 83       	std	Y+6, r24	; 0x06
 b00:	31 11       	cpse	r19, r1
 b02:	03 c0       	rjmp	.+6      	; 0xb0a <conv_brk+0xd0>
 b04:	88 24       	eor	r8, r8
 b06:	83 94       	inc	r8
 b08:	17 c0       	rjmp	.+46     	; 0xb38 <conv_brk+0xfe>
 b0a:	f6 01       	movw	r30, r12
 b0c:	9e 01       	movw	r18, r28
 b0e:	2f 5d       	subi	r18, 0xDF	; 223
 b10:	3f 4f       	sbci	r19, 0xFF	; 255
 b12:	80 81       	ld	r24, Z
 b14:	80 95       	com	r24
 b16:	81 93       	st	Z+, r24
 b18:	2e 17       	cp	r18, r30
 b1a:	3f 07       	cpc	r19, r31
 b1c:	d1 f7       	brne	.-12     	; 0xb12 <conv_brk+0xd8>
 b1e:	f2 cf       	rjmp	.-28     	; 0xb04 <conv_brk+0xca>
 b20:	e1 14       	cp	r14, r1
 b22:	f1 04       	cpc	r15, r1
 b24:	29 f0       	breq	.+10     	; 0xb30 <conv_brk+0xf6>
 b26:	d7 01       	movw	r26, r14
 b28:	8c 93       	st	X, r24
 b2a:	f7 01       	movw	r30, r14
 b2c:	31 96       	adiw	r30, 0x01	; 1
 b2e:	7f 01       	movw	r14, r30
 b30:	9a 94       	dec	r9
 b32:	81 2c       	mov	r8, r1
 b34:	99 20       	and	r9, r9
 b36:	f9 f0       	breq	.+62     	; 0xb76 <conv_brk+0x13c>
 b38:	c5 01       	movw	r24, r10
 b3a:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 b3e:	97 fd       	sbrc	r25, 7
 b40:	18 c0       	rjmp	.+48     	; 0xb72 <conv_brk+0x138>
 b42:	fc 01       	movw	r30, r24
 b44:	ff 27       	eor	r31, r31
 b46:	23 e0       	ldi	r18, 0x03	; 3
 b48:	f5 95       	asr	r31
 b4a:	e7 95       	ror	r30
 b4c:	2a 95       	dec	r18
 b4e:	e1 f7       	brne	.-8      	; 0xb48 <conv_brk+0x10e>
 b50:	ec 0d       	add	r30, r12
 b52:	fd 1d       	adc	r31, r13
 b54:	20 81       	ld	r18, Z
 b56:	30 e0       	ldi	r19, 0x00	; 0
 b58:	ac 01       	movw	r20, r24
 b5a:	47 70       	andi	r20, 0x07	; 7
 b5c:	55 27       	eor	r21, r21
 b5e:	02 c0       	rjmp	.+4      	; 0xb64 <conv_brk+0x12a>
 b60:	35 95       	asr	r19
 b62:	27 95       	ror	r18
 b64:	4a 95       	dec	r20
 b66:	e2 f7       	brpl	.-8      	; 0xb60 <conv_brk+0x126>
 b68:	20 fd       	sbrc	r18, 0
 b6a:	da cf       	rjmp	.-76     	; 0xb20 <conv_brk+0xe6>
 b6c:	b5 01       	movw	r22, r10
 b6e:	0e 94 7a 07 	call	0xef4	; 0xef4 <ungetc>
 b72:	81 10       	cpse	r8, r1
 b74:	87 cf       	rjmp	.-242    	; 0xa84 <conv_brk+0x4a>
 b76:	e1 14       	cp	r14, r1
 b78:	f1 04       	cpc	r15, r1
 b7a:	11 f0       	breq	.+4      	; 0xb80 <conv_brk+0x146>
 b7c:	d7 01       	movw	r26, r14
 b7e:	1c 92       	st	X, r1
 b80:	c8 01       	movw	r24, r16
 b82:	15 c0       	rjmp	.+42     	; 0xbae <conv_brk+0x174>
 b84:	42 2f       	mov	r20, r18
 b86:	46 95       	lsr	r20
 b88:	46 95       	lsr	r20
 b8a:	46 95       	lsr	r20
 b8c:	d6 01       	movw	r26, r12
 b8e:	a4 0f       	add	r26, r20
 b90:	b1 1d       	adc	r27, r1
 b92:	42 2f       	mov	r20, r18
 b94:	47 70       	andi	r20, 0x07	; 7
 b96:	8b 01       	movw	r16, r22
 b98:	02 c0       	rjmp	.+4      	; 0xb9e <conv_brk+0x164>
 b9a:	00 0f       	add	r16, r16
 b9c:	11 1f       	adc	r17, r17
 b9e:	4a 95       	dec	r20
 ba0:	e2 f7       	brpl	.-8      	; 0xb9a <conv_brk+0x160>
 ba2:	a8 01       	movw	r20, r16
 ba4:	5c 91       	ld	r21, X
 ba6:	45 2b       	or	r20, r21
 ba8:	4c 93       	st	X, r20
 baa:	62 2e       	mov	r6, r18
 bac:	a2 cf       	rjmp	.-188    	; 0xaf2 <conv_brk+0xb8>
 bae:	a0 96       	adiw	r28, 0x20	; 32
 bb0:	ef e0       	ldi	r30, 0x0F	; 15
 bb2:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__epilogue_restores__+0x6>

00000bb6 <vfscanf>:
 bb6:	a0 e0       	ldi	r26, 0x00	; 0
 bb8:	b0 e0       	ldi	r27, 0x00	; 0
 bba:	e1 ee       	ldi	r30, 0xE1	; 225
 bbc:	f5 e0       	ldi	r31, 0x05	; 5
 bbe:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__prologue_saves__+0x6>
 bc2:	6c 01       	movw	r12, r24
 bc4:	eb 01       	movw	r28, r22
 bc6:	5a 01       	movw	r10, r20
 bc8:	fc 01       	movw	r30, r24
 bca:	17 82       	std	Z+7, r1	; 0x07
 bcc:	16 82       	std	Z+6, r1	; 0x06
 bce:	51 2c       	mov	r5, r1
 bd0:	f6 01       	movw	r30, r12
 bd2:	e3 80       	ldd	r14, Z+3	; 0x03
 bd4:	fe 01       	movw	r30, r28
 bd6:	e3 fc       	sbrc	r14, 3
 bd8:	85 91       	lpm	r24, Z+
 bda:	e3 fe       	sbrs	r14, 3
 bdc:	81 91       	ld	r24, Z+
 bde:	18 2f       	mov	r17, r24
 be0:	ef 01       	movw	r28, r30
 be2:	88 23       	and	r24, r24
 be4:	09 f4       	brne	.+2      	; 0xbe8 <vfscanf+0x32>
 be6:	ee c0       	rjmp	.+476    	; 0xdc4 <vfscanf+0x20e>
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <isspace>
 bee:	89 2b       	or	r24, r25
 bf0:	21 f0       	breq	.+8      	; 0xbfa <vfscanf+0x44>
 bf2:	c6 01       	movw	r24, r12
 bf4:	0e 94 72 04 	call	0x8e4	; 0x8e4 <skip_spaces>
 bf8:	eb cf       	rjmp	.-42     	; 0xbd0 <vfscanf+0x1a>
 bfa:	15 32       	cpi	r17, 0x25	; 37
 bfc:	41 f4       	brne	.+16     	; 0xc0e <vfscanf+0x58>
 bfe:	fe 01       	movw	r30, r28
 c00:	e3 fc       	sbrc	r14, 3
 c02:	15 91       	lpm	r17, Z+
 c04:	e3 fe       	sbrs	r14, 3
 c06:	11 91       	ld	r17, Z+
 c08:	ef 01       	movw	r28, r30
 c0a:	15 32       	cpi	r17, 0x25	; 37
 c0c:	81 f4       	brne	.+32     	; 0xc2e <vfscanf+0x78>
 c0e:	c6 01       	movw	r24, r12
 c10:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 c14:	97 fd       	sbrc	r25, 7
 c16:	d4 c0       	rjmp	.+424    	; 0xdc0 <vfscanf+0x20a>
 c18:	41 2f       	mov	r20, r17
 c1a:	50 e0       	ldi	r21, 0x00	; 0
 c1c:	9c 01       	movw	r18, r24
 c1e:	33 27       	eor	r19, r19
 c20:	24 17       	cp	r18, r20
 c22:	35 07       	cpc	r19, r21
 c24:	a9 f2       	breq	.-86     	; 0xbd0 <vfscanf+0x1a>
 c26:	b6 01       	movw	r22, r12
 c28:	0e 94 7a 07 	call	0xef4	; 0xef4 <ungetc>
 c2c:	cb c0       	rjmp	.+406    	; 0xdc4 <vfscanf+0x20e>
 c2e:	1a 32       	cpi	r17, 0x2A	; 42
 c30:	39 f4       	brne	.+14     	; 0xc40 <vfscanf+0x8a>
 c32:	e3 fc       	sbrc	r14, 3
 c34:	15 91       	lpm	r17, Z+
 c36:	e3 fe       	sbrs	r14, 3
 c38:	11 91       	ld	r17, Z+
 c3a:	ef 01       	movw	r28, r30
 c3c:	01 e0       	ldi	r16, 0x01	; 1
 c3e:	01 c0       	rjmp	.+2      	; 0xc42 <vfscanf+0x8c>
 c40:	00 e0       	ldi	r16, 0x00	; 0
 c42:	f1 2c       	mov	r15, r1
 c44:	20 ed       	ldi	r18, 0xD0	; 208
 c46:	21 0f       	add	r18, r17
 c48:	2a 30       	cpi	r18, 0x0A	; 10
 c4a:	80 f4       	brcc	.+32     	; 0xc6c <vfscanf+0xb6>
 c4c:	02 60       	ori	r16, 0x02	; 2
 c4e:	6f 2d       	mov	r22, r15
 c50:	70 e0       	ldi	r23, 0x00	; 0
 c52:	80 e0       	ldi	r24, 0x00	; 0
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	40 e2       	ldi	r20, 0x20	; 32
 c58:	0e 94 4b 04 	call	0x896	; 0x896 <mulacc>
 c5c:	f6 2e       	mov	r15, r22
 c5e:	fe 01       	movw	r30, r28
 c60:	e3 fc       	sbrc	r14, 3
 c62:	15 91       	lpm	r17, Z+
 c64:	e3 fe       	sbrs	r14, 3
 c66:	11 91       	ld	r17, Z+
 c68:	ef 01       	movw	r28, r30
 c6a:	ec cf       	rjmp	.-40     	; 0xc44 <vfscanf+0x8e>
 c6c:	01 ff       	sbrs	r16, 1
 c6e:	03 c0       	rjmp	.+6      	; 0xc76 <vfscanf+0xc0>
 c70:	f1 10       	cpse	r15, r1
 c72:	03 c0       	rjmp	.+6      	; 0xc7a <vfscanf+0xc4>
 c74:	a7 c0       	rjmp	.+334    	; 0xdc4 <vfscanf+0x20e>
 c76:	ff 24       	eor	r15, r15
 c78:	fa 94       	dec	r15
 c7a:	18 36       	cpi	r17, 0x68	; 104
 c7c:	19 f0       	breq	.+6      	; 0xc84 <vfscanf+0xce>
 c7e:	1c 36       	cpi	r17, 0x6C	; 108
 c80:	51 f0       	breq	.+20     	; 0xc96 <vfscanf+0xe0>
 c82:	10 c0       	rjmp	.+32     	; 0xca4 <vfscanf+0xee>
 c84:	fe 01       	movw	r30, r28
 c86:	e3 fc       	sbrc	r14, 3
 c88:	15 91       	lpm	r17, Z+
 c8a:	e3 fe       	sbrs	r14, 3
 c8c:	11 91       	ld	r17, Z+
 c8e:	ef 01       	movw	r28, r30
 c90:	18 36       	cpi	r17, 0x68	; 104
 c92:	41 f4       	brne	.+16     	; 0xca4 <vfscanf+0xee>
 c94:	08 60       	ori	r16, 0x08	; 8
 c96:	04 60       	ori	r16, 0x04	; 4
 c98:	fe 01       	movw	r30, r28
 c9a:	e3 fc       	sbrc	r14, 3
 c9c:	15 91       	lpm	r17, Z+
 c9e:	e3 fe       	sbrs	r14, 3
 ca0:	11 91       	ld	r17, Z+
 ca2:	ef 01       	movw	r28, r30
 ca4:	11 23       	and	r17, r17
 ca6:	09 f4       	brne	.+2      	; 0xcaa <vfscanf+0xf4>
 ca8:	8d c0       	rjmp	.+282    	; 0xdc4 <vfscanf+0x20e>
 caa:	61 2f       	mov	r22, r17
 cac:	70 e0       	ldi	r23, 0x00	; 0
 cae:	8e eb       	ldi	r24, 0xBE	; 190
 cb0:	90 e0       	ldi	r25, 0x00	; 0
 cb2:	0e 94 f5 06 	call	0xdea	; 0xdea <strchr_P>
 cb6:	89 2b       	or	r24, r25
 cb8:	09 f4       	brne	.+2      	; 0xcbc <vfscanf+0x106>
 cba:	84 c0       	rjmp	.+264    	; 0xdc4 <vfscanf+0x20e>
 cbc:	00 fd       	sbrc	r16, 0
 cbe:	07 c0       	rjmp	.+14     	; 0xcce <vfscanf+0x118>
 cc0:	f5 01       	movw	r30, r10
 cc2:	80 80       	ld	r8, Z
 cc4:	91 80       	ldd	r9, Z+1	; 0x01
 cc6:	c5 01       	movw	r24, r10
 cc8:	02 96       	adiw	r24, 0x02	; 2
 cca:	5c 01       	movw	r10, r24
 ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <vfscanf+0x11c>
 cce:	81 2c       	mov	r8, r1
 cd0:	91 2c       	mov	r9, r1
 cd2:	1e 36       	cpi	r17, 0x6E	; 110
 cd4:	51 f4       	brne	.+20     	; 0xcea <vfscanf+0x134>
 cd6:	f6 01       	movw	r30, r12
 cd8:	46 81       	ldd	r20, Z+6	; 0x06
 cda:	57 81       	ldd	r21, Z+7	; 0x07
 cdc:	60 e0       	ldi	r22, 0x00	; 0
 cde:	70 e0       	ldi	r23, 0x00	; 0
 ce0:	20 2f       	mov	r18, r16
 ce2:	c4 01       	movw	r24, r8
 ce4:	0e 94 3f 04 	call	0x87e	; 0x87e <putval>
 ce8:	73 cf       	rjmp	.-282    	; 0xbd0 <vfscanf+0x1a>
 cea:	13 36       	cpi	r17, 0x63	; 99
 cec:	a9 f4       	brne	.+42     	; 0xd18 <vfscanf+0x162>
 cee:	01 fd       	sbrc	r16, 1
 cf0:	02 c0       	rjmp	.+4      	; 0xcf6 <vfscanf+0x140>
 cf2:	ff 24       	eor	r15, r15
 cf4:	f3 94       	inc	r15
 cf6:	c6 01       	movw	r24, r12
 cf8:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 cfc:	97 fd       	sbrc	r25, 7
 cfe:	60 c0       	rjmp	.+192    	; 0xdc0 <vfscanf+0x20a>
 d00:	81 14       	cp	r8, r1
 d02:	91 04       	cpc	r9, r1
 d04:	29 f0       	breq	.+10     	; 0xd10 <vfscanf+0x15a>
 d06:	f4 01       	movw	r30, r8
 d08:	80 83       	st	Z, r24
 d0a:	c4 01       	movw	r24, r8
 d0c:	01 96       	adiw	r24, 0x01	; 1
 d0e:	4c 01       	movw	r8, r24
 d10:	fa 94       	dec	r15
 d12:	f1 10       	cpse	r15, r1
 d14:	f0 cf       	rjmp	.-32     	; 0xcf6 <vfscanf+0x140>
 d16:	50 c0       	rjmp	.+160    	; 0xdb8 <vfscanf+0x202>
 d18:	1b 35       	cpi	r17, 0x5B	; 91
 d1a:	59 f4       	brne	.+22     	; 0xd32 <vfscanf+0x17c>
 d1c:	9e 01       	movw	r18, r28
 d1e:	a4 01       	movw	r20, r8
 d20:	6f 2d       	mov	r22, r15
 d22:	c6 01       	movw	r24, r12
 d24:	0e 94 1d 05 	call	0xa3a	; 0xa3a <conv_brk>
 d28:	ec 01       	movw	r28, r24
 d2a:	89 2b       	or	r24, r25
 d2c:	09 f0       	breq	.+2      	; 0xd30 <vfscanf+0x17a>
 d2e:	44 c0       	rjmp	.+136    	; 0xdb8 <vfscanf+0x202>
 d30:	3e c0       	rjmp	.+124    	; 0xdae <vfscanf+0x1f8>
 d32:	c6 01       	movw	r24, r12
 d34:	0e 94 72 04 	call	0x8e4	; 0x8e4 <skip_spaces>
 d38:	97 fd       	sbrc	r25, 7
 d3a:	42 c0       	rjmp	.+132    	; 0xdc0 <vfscanf+0x20a>
 d3c:	1f 36       	cpi	r17, 0x6F	; 111
 d3e:	61 f1       	breq	.+88     	; 0xd98 <vfscanf+0x1e2>
 d40:	28 f4       	brcc	.+10     	; 0xd4c <vfscanf+0x196>
 d42:	14 36       	cpi	r17, 0x64	; 100
 d44:	39 f1       	breq	.+78     	; 0xd94 <vfscanf+0x1de>
 d46:	19 36       	cpi	r17, 0x69	; 105
 d48:	51 f1       	breq	.+84     	; 0xd9e <vfscanf+0x1e8>
 d4a:	28 c0       	rjmp	.+80     	; 0xd9c <vfscanf+0x1e6>
 d4c:	13 37       	cpi	r17, 0x73	; 115
 d4e:	71 f0       	breq	.+28     	; 0xd6c <vfscanf+0x1b6>
 d50:	15 37       	cpi	r17, 0x75	; 117
 d52:	01 f1       	breq	.+64     	; 0xd94 <vfscanf+0x1de>
 d54:	23 c0       	rjmp	.+70     	; 0xd9c <vfscanf+0x1e6>
 d56:	81 14       	cp	r8, r1
 d58:	91 04       	cpc	r9, r1
 d5a:	29 f0       	breq	.+10     	; 0xd66 <vfscanf+0x1b0>
 d5c:	f4 01       	movw	r30, r8
 d5e:	60 82       	st	Z, r6
 d60:	c4 01       	movw	r24, r8
 d62:	01 96       	adiw	r24, 0x01	; 1
 d64:	4c 01       	movw	r8, r24
 d66:	fa 94       	dec	r15
 d68:	ff 20       	and	r15, r15
 d6a:	71 f0       	breq	.+28     	; 0xd88 <vfscanf+0x1d2>
 d6c:	c6 01       	movw	r24, r12
 d6e:	0e 94 00 07 	call	0xe00	; 0xe00 <fgetc>
 d72:	3c 01       	movw	r6, r24
 d74:	97 fd       	sbrc	r25, 7
 d76:	08 c0       	rjmp	.+16     	; 0xd88 <vfscanf+0x1d2>
 d78:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <isspace>
 d7c:	89 2b       	or	r24, r25
 d7e:	59 f3       	breq	.-42     	; 0xd56 <vfscanf+0x1a0>
 d80:	b6 01       	movw	r22, r12
 d82:	c3 01       	movw	r24, r6
 d84:	0e 94 7a 07 	call	0xef4	; 0xef4 <ungetc>
 d88:	81 14       	cp	r8, r1
 d8a:	91 04       	cpc	r9, r1
 d8c:	a9 f0       	breq	.+42     	; 0xdb8 <vfscanf+0x202>
 d8e:	f4 01       	movw	r30, r8
 d90:	10 82       	st	Z, r1
 d92:	12 c0       	rjmp	.+36     	; 0xdb8 <vfscanf+0x202>
 d94:	00 62       	ori	r16, 0x20	; 32
 d96:	03 c0       	rjmp	.+6      	; 0xd9e <vfscanf+0x1e8>
 d98:	00 61       	ori	r16, 0x10	; 16
 d9a:	01 c0       	rjmp	.+2      	; 0xd9e <vfscanf+0x1e8>
 d9c:	00 64       	ori	r16, 0x40	; 64
 d9e:	20 2f       	mov	r18, r16
 da0:	a4 01       	movw	r20, r8
 da2:	6f 2d       	mov	r22, r15
 da4:	c6 01       	movw	r24, r12
 da6:	0e 94 8b 04 	call	0x916	; 0x916 <conv_int>
 daa:	81 11       	cpse	r24, r1
 dac:	05 c0       	rjmp	.+10     	; 0xdb8 <vfscanf+0x202>
 dae:	f6 01       	movw	r30, r12
 db0:	83 81       	ldd	r24, Z+3	; 0x03
 db2:	80 73       	andi	r24, 0x30	; 48
 db4:	29 f4       	brne	.+10     	; 0xdc0 <vfscanf+0x20a>
 db6:	06 c0       	rjmp	.+12     	; 0xdc4 <vfscanf+0x20e>
 db8:	00 fd       	sbrc	r16, 0
 dba:	0a cf       	rjmp	.-492    	; 0xbd0 <vfscanf+0x1a>
 dbc:	53 94       	inc	r5
 dbe:	08 cf       	rjmp	.-496    	; 0xbd0 <vfscanf+0x1a>
 dc0:	55 20       	and	r5, r5
 dc2:	19 f0       	breq	.+6      	; 0xdca <vfscanf+0x214>
 dc4:	85 2d       	mov	r24, r5
 dc6:	90 e0       	ldi	r25, 0x00	; 0
 dc8:	02 c0       	rjmp	.+4      	; 0xdce <vfscanf+0x218>
 dca:	8f ef       	ldi	r24, 0xFF	; 255
 dcc:	9f ef       	ldi	r25, 0xFF	; 255
 dce:	cd b7       	in	r28, 0x3d	; 61
 dd0:	de b7       	in	r29, 0x3e	; 62
 dd2:	ef e0       	ldi	r30, 0x0F	; 15
 dd4:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__epilogue_restores__+0x6>

00000dd8 <isspace>:
 dd8:	91 11       	cpse	r25, r1
 dda:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__ctype_isfalse>
 dde:	80 32       	cpi	r24, 0x20	; 32
 de0:	19 f0       	breq	.+6      	; 0xde8 <isspace+0x10>
 de2:	89 50       	subi	r24, 0x09	; 9
 de4:	85 50       	subi	r24, 0x05	; 5
 de6:	c8 f7       	brcc	.-14     	; 0xdda <isspace+0x2>
 de8:	08 95       	ret

00000dea <strchr_P>:
 dea:	fc 01       	movw	r30, r24
 dec:	05 90       	lpm	r0, Z+
 dee:	06 16       	cp	r0, r22
 df0:	21 f0       	breq	.+8      	; 0xdfa <strchr_P+0x10>
 df2:	00 20       	and	r0, r0
 df4:	d9 f7       	brne	.-10     	; 0xdec <strchr_P+0x2>
 df6:	c0 01       	movw	r24, r0
 df8:	08 95       	ret
 dfa:	31 97       	sbiw	r30, 0x01	; 1
 dfc:	cf 01       	movw	r24, r30
 dfe:	08 95       	ret

00000e00 <fgetc>:
 e00:	cf 93       	push	r28
 e02:	df 93       	push	r29
 e04:	ec 01       	movw	r28, r24
 e06:	2b 81       	ldd	r18, Y+3	; 0x03
 e08:	20 ff       	sbrs	r18, 0
 e0a:	33 c0       	rjmp	.+102    	; 0xe72 <fgetc+0x72>
 e0c:	26 ff       	sbrs	r18, 6
 e0e:	0a c0       	rjmp	.+20     	; 0xe24 <fgetc+0x24>
 e10:	2f 7b       	andi	r18, 0xBF	; 191
 e12:	2b 83       	std	Y+3, r18	; 0x03
 e14:	8e 81       	ldd	r24, Y+6	; 0x06
 e16:	9f 81       	ldd	r25, Y+7	; 0x07
 e18:	01 96       	adiw	r24, 0x01	; 1
 e1a:	9f 83       	std	Y+7, r25	; 0x07
 e1c:	8e 83       	std	Y+6, r24	; 0x06
 e1e:	8a 81       	ldd	r24, Y+2	; 0x02
 e20:	90 e0       	ldi	r25, 0x00	; 0
 e22:	29 c0       	rjmp	.+82     	; 0xe76 <fgetc+0x76>
 e24:	22 ff       	sbrs	r18, 2
 e26:	0f c0       	rjmp	.+30     	; 0xe46 <fgetc+0x46>
 e28:	e8 81       	ld	r30, Y
 e2a:	f9 81       	ldd	r31, Y+1	; 0x01
 e2c:	80 81       	ld	r24, Z
 e2e:	08 2e       	mov	r0, r24
 e30:	00 0c       	add	r0, r0
 e32:	99 0b       	sbc	r25, r25
 e34:	00 97       	sbiw	r24, 0x00	; 0
 e36:	19 f4       	brne	.+6      	; 0xe3e <fgetc+0x3e>
 e38:	20 62       	ori	r18, 0x20	; 32
 e3a:	2b 83       	std	Y+3, r18	; 0x03
 e3c:	1a c0       	rjmp	.+52     	; 0xe72 <fgetc+0x72>
 e3e:	31 96       	adiw	r30, 0x01	; 1
 e40:	f9 83       	std	Y+1, r31	; 0x01
 e42:	e8 83       	st	Y, r30
 e44:	0e c0       	rjmp	.+28     	; 0xe62 <fgetc+0x62>
 e46:	ea 85       	ldd	r30, Y+10	; 0x0a
 e48:	fb 85       	ldd	r31, Y+11	; 0x0b
 e4a:	09 95       	icall
 e4c:	97 ff       	sbrs	r25, 7
 e4e:	09 c0       	rjmp	.+18     	; 0xe62 <fgetc+0x62>
 e50:	2b 81       	ldd	r18, Y+3	; 0x03
 e52:	01 96       	adiw	r24, 0x01	; 1
 e54:	11 f0       	breq	.+4      	; 0xe5a <fgetc+0x5a>
 e56:	80 e2       	ldi	r24, 0x20	; 32
 e58:	01 c0       	rjmp	.+2      	; 0xe5c <fgetc+0x5c>
 e5a:	80 e1       	ldi	r24, 0x10	; 16
 e5c:	82 2b       	or	r24, r18
 e5e:	8b 83       	std	Y+3, r24	; 0x03
 e60:	08 c0       	rjmp	.+16     	; 0xe72 <fgetc+0x72>
 e62:	2e 81       	ldd	r18, Y+6	; 0x06
 e64:	3f 81       	ldd	r19, Y+7	; 0x07
 e66:	2f 5f       	subi	r18, 0xFF	; 255
 e68:	3f 4f       	sbci	r19, 0xFF	; 255
 e6a:	3f 83       	std	Y+7, r19	; 0x07
 e6c:	2e 83       	std	Y+6, r18	; 0x06
 e6e:	99 27       	eor	r25, r25
 e70:	02 c0       	rjmp	.+4      	; 0xe76 <fgetc+0x76>
 e72:	8f ef       	ldi	r24, 0xFF	; 255
 e74:	9f ef       	ldi	r25, 0xFF	; 255
 e76:	df 91       	pop	r29
 e78:	cf 91       	pop	r28
 e7a:	08 95       	ret

00000e7c <fputc>:
 e7c:	0f 93       	push	r16
 e7e:	1f 93       	push	r17
 e80:	cf 93       	push	r28
 e82:	df 93       	push	r29
 e84:	fb 01       	movw	r30, r22
 e86:	23 81       	ldd	r18, Z+3	; 0x03
 e88:	21 fd       	sbrc	r18, 1
 e8a:	03 c0       	rjmp	.+6      	; 0xe92 <fputc+0x16>
 e8c:	8f ef       	ldi	r24, 0xFF	; 255
 e8e:	9f ef       	ldi	r25, 0xFF	; 255
 e90:	2c c0       	rjmp	.+88     	; 0xeea <fputc+0x6e>
 e92:	22 ff       	sbrs	r18, 2
 e94:	16 c0       	rjmp	.+44     	; 0xec2 <fputc+0x46>
 e96:	46 81       	ldd	r20, Z+6	; 0x06
 e98:	57 81       	ldd	r21, Z+7	; 0x07
 e9a:	24 81       	ldd	r18, Z+4	; 0x04
 e9c:	35 81       	ldd	r19, Z+5	; 0x05
 e9e:	42 17       	cp	r20, r18
 ea0:	53 07       	cpc	r21, r19
 ea2:	44 f4       	brge	.+16     	; 0xeb4 <fputc+0x38>
 ea4:	a0 81       	ld	r26, Z
 ea6:	b1 81       	ldd	r27, Z+1	; 0x01
 ea8:	9d 01       	movw	r18, r26
 eaa:	2f 5f       	subi	r18, 0xFF	; 255
 eac:	3f 4f       	sbci	r19, 0xFF	; 255
 eae:	31 83       	std	Z+1, r19	; 0x01
 eb0:	20 83       	st	Z, r18
 eb2:	8c 93       	st	X, r24
 eb4:	26 81       	ldd	r18, Z+6	; 0x06
 eb6:	37 81       	ldd	r19, Z+7	; 0x07
 eb8:	2f 5f       	subi	r18, 0xFF	; 255
 eba:	3f 4f       	sbci	r19, 0xFF	; 255
 ebc:	37 83       	std	Z+7, r19	; 0x07
 ebe:	26 83       	std	Z+6, r18	; 0x06
 ec0:	14 c0       	rjmp	.+40     	; 0xeea <fputc+0x6e>
 ec2:	8b 01       	movw	r16, r22
 ec4:	ec 01       	movw	r28, r24
 ec6:	fb 01       	movw	r30, r22
 ec8:	00 84       	ldd	r0, Z+8	; 0x08
 eca:	f1 85       	ldd	r31, Z+9	; 0x09
 ecc:	e0 2d       	mov	r30, r0
 ece:	09 95       	icall
 ed0:	89 2b       	or	r24, r25
 ed2:	e1 f6       	brne	.-72     	; 0xe8c <fputc+0x10>
 ed4:	d8 01       	movw	r26, r16
 ed6:	16 96       	adiw	r26, 0x06	; 6
 ed8:	8d 91       	ld	r24, X+
 eda:	9c 91       	ld	r25, X
 edc:	17 97       	sbiw	r26, 0x07	; 7
 ede:	01 96       	adiw	r24, 0x01	; 1
 ee0:	17 96       	adiw	r26, 0x07	; 7
 ee2:	9c 93       	st	X, r25
 ee4:	8e 93       	st	-X, r24
 ee6:	16 97       	sbiw	r26, 0x06	; 6
 ee8:	ce 01       	movw	r24, r28
 eea:	df 91       	pop	r29
 eec:	cf 91       	pop	r28
 eee:	1f 91       	pop	r17
 ef0:	0f 91       	pop	r16
 ef2:	08 95       	ret

00000ef4 <ungetc>:
 ef4:	fb 01       	movw	r30, r22
 ef6:	23 81       	ldd	r18, Z+3	; 0x03
 ef8:	20 ff       	sbrs	r18, 0
 efa:	12 c0       	rjmp	.+36     	; 0xf20 <ungetc+0x2c>
 efc:	26 fd       	sbrc	r18, 6
 efe:	10 c0       	rjmp	.+32     	; 0xf20 <ungetc+0x2c>
 f00:	8f 3f       	cpi	r24, 0xFF	; 255
 f02:	3f ef       	ldi	r19, 0xFF	; 255
 f04:	93 07       	cpc	r25, r19
 f06:	61 f0       	breq	.+24     	; 0xf20 <ungetc+0x2c>
 f08:	82 83       	std	Z+2, r24	; 0x02
 f0a:	2f 7d       	andi	r18, 0xDF	; 223
 f0c:	20 64       	ori	r18, 0x40	; 64
 f0e:	23 83       	std	Z+3, r18	; 0x03
 f10:	26 81       	ldd	r18, Z+6	; 0x06
 f12:	37 81       	ldd	r19, Z+7	; 0x07
 f14:	21 50       	subi	r18, 0x01	; 1
 f16:	31 09       	sbc	r19, r1
 f18:	37 83       	std	Z+7, r19	; 0x07
 f1a:	26 83       	std	Z+6, r18	; 0x06
 f1c:	99 27       	eor	r25, r25
 f1e:	08 95       	ret
 f20:	8f ef       	ldi	r24, 0xFF	; 255
 f22:	9f ef       	ldi	r25, 0xFF	; 255
 f24:	08 95       	ret

00000f26 <__ctype_isfalse>:
 f26:	99 27       	eor	r25, r25
 f28:	88 27       	eor	r24, r24

00000f2a <__ctype_istrue>:
 f2a:	08 95       	ret

00000f2c <__prologue_saves__>:
 f2c:	2f 92       	push	r2
 f2e:	3f 92       	push	r3
 f30:	4f 92       	push	r4
 f32:	5f 92       	push	r5
 f34:	6f 92       	push	r6
 f36:	7f 92       	push	r7
 f38:	8f 92       	push	r8
 f3a:	9f 92       	push	r9
 f3c:	af 92       	push	r10
 f3e:	bf 92       	push	r11
 f40:	cf 92       	push	r12
 f42:	df 92       	push	r13
 f44:	ef 92       	push	r14
 f46:	ff 92       	push	r15
 f48:	0f 93       	push	r16
 f4a:	1f 93       	push	r17
 f4c:	cf 93       	push	r28
 f4e:	df 93       	push	r29
 f50:	cd b7       	in	r28, 0x3d	; 61
 f52:	de b7       	in	r29, 0x3e	; 62
 f54:	ca 1b       	sub	r28, r26
 f56:	db 0b       	sbc	r29, r27
 f58:	0f b6       	in	r0, 0x3f	; 63
 f5a:	f8 94       	cli
 f5c:	de bf       	out	0x3e, r29	; 62
 f5e:	0f be       	out	0x3f, r0	; 63
 f60:	cd bf       	out	0x3d, r28	; 61
 f62:	09 94       	ijmp

00000f64 <__epilogue_restores__>:
 f64:	2a 88       	ldd	r2, Y+18	; 0x12
 f66:	39 88       	ldd	r3, Y+17	; 0x11
 f68:	48 88       	ldd	r4, Y+16	; 0x10
 f6a:	5f 84       	ldd	r5, Y+15	; 0x0f
 f6c:	6e 84       	ldd	r6, Y+14	; 0x0e
 f6e:	7d 84       	ldd	r7, Y+13	; 0x0d
 f70:	8c 84       	ldd	r8, Y+12	; 0x0c
 f72:	9b 84       	ldd	r9, Y+11	; 0x0b
 f74:	aa 84       	ldd	r10, Y+10	; 0x0a
 f76:	b9 84       	ldd	r11, Y+9	; 0x09
 f78:	c8 84       	ldd	r12, Y+8	; 0x08
 f7a:	df 80       	ldd	r13, Y+7	; 0x07
 f7c:	ee 80       	ldd	r14, Y+6	; 0x06
 f7e:	fd 80       	ldd	r15, Y+5	; 0x05
 f80:	0c 81       	ldd	r16, Y+4	; 0x04
 f82:	1b 81       	ldd	r17, Y+3	; 0x03
 f84:	aa 81       	ldd	r26, Y+2	; 0x02
 f86:	b9 81       	ldd	r27, Y+1	; 0x01
 f88:	ce 0f       	add	r28, r30
 f8a:	d1 1d       	adc	r29, r1
 f8c:	0f b6       	in	r0, 0x3f	; 63
 f8e:	f8 94       	cli
 f90:	de bf       	out	0x3e, r29	; 62
 f92:	0f be       	out	0x3f, r0	; 63
 f94:	cd bf       	out	0x3d, r28	; 61
 f96:	ed 01       	movw	r28, r26
 f98:	08 95       	ret

00000f9a <_exit>:
 f9a:	f8 94       	cli

00000f9c <__stop_program>:
 f9c:	ff cf       	rjmp	.-2      	; 0xf9c <__stop_program>
